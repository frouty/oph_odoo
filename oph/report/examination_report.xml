<?xml version="1.0" encoding="utf-8"?>
<openerp>
    <data noupdate="0">
        <!-- STYLESHEET -->
        <record model="report.stylesheets" id="stt_ordo_id">
            <field name="name">STT for Ordonnance</field>
            <field name="report_styles">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
3MWu9xNjW3WPhKD4m4MItMtKsXH9yr6Y9GVHoHYhbvJleM4RIhHewecgr0RG5mMiYBtS6aeUo4gJ
QZpQD4DQJA2JwYsLV7PAiLZcAHUAB12N2IsmSlCSif8ZK4/4hqLvyUFLcyYHifRN4kqrpdn6bqfV
dzTo4XF0bRW2EoNZW3GRqB6bwCuzuMqQHfAdHRq1BJ9JUmEjg/GmgziSzT8Tbfh0ZRuIfuYmfGAy
YaJt9a27c6rH3WP3jxwb2MNTK1EdZN7SnnEJzrXWTte/7tgtMzLk1ZHWtrP2e/PJkea7bHnUbubk
o/yVPjATtqlVWiWQ1tZ7vHDE3saxWJEmU7Y1l2/eSqQMlsVfPer7f7BKPzhVd37QUS36qUvzD1BL
BwiqJQTOaQUAACwjAABQSwMEFAAACAAASAeIRKAoyivbAwAA2wMAAAgAAABtZXRhLnhtbDw/eG1s
IHZlcnNpb249IjEuMCIgZW5jb2Rpbmc9IlVURi04Ij8+CjxvZmZpY2U6ZG9jdW1lbnQtbWV0YSB4
bWxuczpvZmZpY2U9InVybjpvYXNpczpuYW1lczp0YzpvcGVuZG9jdW1lbnQ6eG1sbnM6b2ZmaWNl
OjEuMCIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHhtbG5zOmRj
PSJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xLyIgeG1sbnM6bWV0YT0idXJuOm9hc2lz
Om5hbWVzOnRjOm9wZW5kb2N1bWVudDp4bWxuczptZXRhOjEuMCIgeG1sbnM6b29vPSJodHRwOi8v
b3Blbm9mZmljZS5vcmcvMjAwNC9vZmZpY2UiIHhtbG5zOmdyZGRsPSJodHRwOi8vd3d3LnczLm9y
Zy8yMDAzL2cvZGF0YS12aWV3IyIgb2ZmaWNlOnZlcnNpb249IjEuMiI+PG9mZmljZTptZXRhPjxt
ZXRhOmNyZWF0aW9uLWRhdGU+MjAxNC0wMS0wOFQyMjo1MjoyMzwvbWV0YTpjcmVhdGlvbi1kYXRl
PjxkYzpkYXRlPjIwMTQtMDQtMDhUMTE6NTg6MTc8L2RjOmRhdGU+PG1ldGE6ZWRpdGluZy1kdXJh
dGlvbj5QMEQ8L21ldGE6ZWRpdGluZy1kdXJhdGlvbj48bWV0YTplZGl0aW5nLWN5Y2xlcz4zPC9t
ZXRhOmVkaXRpbmctY3ljbGVzPjxtZXRhOmdlbmVyYXRvcj5MaWJyZU9mZmljZS8zLjUkTGludXhf
WDg2XzY0IExpYnJlT2ZmaWNlX3Byb2plY3QvMzUwbTEkQnVpbGQtMjwvbWV0YTpnZW5lcmF0b3I+
PGRjOmNyZWF0b3I+TC4gRlJBTkNPSVM8L2RjOmNyZWF0b3I+PG1ldGE6ZG9jdW1lbnQtc3RhdGlz
dGljIG1ldGE6dGFibGUtY291bnQ9IjAiIG1ldGE6aW1hZ2UtY291bnQ9IjAiIG1ldGE6b2JqZWN0
LWNvdW50PSIwIiBtZXRhOnBhZ2UtY291bnQ9IjEiIG1ldGE6cGFyYWdyYXBoLWNvdW50PSI1IiBt
ZXRhOndvcmQtY291bnQ9IjcwIiBtZXRhOmNoYXJhY3Rlci1jb3VudD0iNDQ5IiBtZXRhOm5vbi13
aGl0ZXNwYWNlLWNoYXJhY3Rlci1jb3VudD0iMzg1Ii8+PC9vZmZpY2U6bWV0YT48L29mZmljZTpk
b2N1bWVudC1tZXRhPlBLAwQUAAgICABIB4hEAAAAAAAAAAAAAAAADAAAAG1hbmlmZXN0LnJkZs2T
zW6DMBCE7zyFZc7YQC8FBXIoyrlqn8A1hlgFL/KaEt6+jpNWUaSq6p/U465GM9+OtJvtYRzIi7Ko
wVQ0YyklykhotekrOrsuuaXbOtrYtisfmh3xaoOlnyq6d24qOV+WhS03DGzPs6IoeJrzPE+8IsHV
OHFIDMa0jggJHo1CafXkfBo5zuIJZldRdOugkHn3ID2L3TqpoLIKYbZSvYe2IJGBQI0JTMqEdIMc
uk5LxTOW81E5waHt4sdgvdODojxg8CuOz9jeiAym5V7gvbDuXIPffJVoeu5jenXTxfHfI5RgnDLu
T+q7O3n/5/4uz/8Z4q+0dkRsQM6jZ/qQ57TyH1VHr1BLBwi092jSBQEAAIMDAABQSwMEFAAICAgA
SAeIRAAAAAAAAAAAAAAAACcAAABDb25maWd1cmF0aW9uczIvYWNjZWxlcmF0b3IvY3VycmVudC54
bWwDAFBLBwgAAAAAAgAAAAAAAABQSwMEFAAACAAASAeIRAAAAAAAAAAAAAAAABoAAABDb25maWd1
cmF0aW9uczIvc3RhdHVzYmFyL1BLAwQUAAAIAABIB4hEAAAAAAAAAAAAAAAAGgAAAENvbmZpZ3Vy
YXRpb25zMi9wb3B1cG1lbnUvUEsDBBQAAAgAAEgHiEQAAAAAAAAAAAAAAAAfAAAAQ29uZmlndXJh
dGlvbnMyL2ltYWdlcy9CaXRtYXBzL1BLAwQUAAAIAABIB4hEAAAAAAAAAAAAAAAAHAAAAENvbmZp
Z3VyYXRpb25zMi9wcm9ncmVzc2Jhci9QSwMEFAAACAAASAeIRAAAAAAAAAAAAAAAABgAAABDb25m
aWd1cmF0aW9uczIvdG9vbGJhci9QSwMEFAAACAAASAeIRAAAAAAAAAAAAAAAABoAAABDb25maWd1
cmF0aW9uczIvdG9vbHBhbmVsL1BLAwQUAAAIAABIB4hEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3Vy
YXRpb25zMi9mbG9hdGVyL1BLAwQUAAAIAABIB4hEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3VyYXRp
b25zMi9tZW51YmFyL1BLAwQUAAgICABIB4hEAAAAAAAAAAAAAAAAFQAAAE1FVEEtSU5GL21hbmlm
ZXN0LnhtbK1Uy27DIBC85yssrpWhzalCcXKo1C9IP4DitYMEC4Iliv++OGoeVeUqVn3bx+zMCBY2
u5Oz1RFiMh4b9sKfWQWofWuwb9jH/r1+ZbvtauMUmg4SyUtQlTlM17RhOaL0KpkkUTlIkrT0AbD1
OjtAkj/x8qx0ze4MrNl2Vd30OmOhLvNxuKG7bG0dFB0aJqZIbmUHrVE1DQEapkKwRisqMHHElp8N
83ufnOBETMzxsD9k94nK2CToEvKA/YQH41QPYuzPUtEeafRXznGCeHQuxvYs3kSDhbQ8LRCVHVqe
2AGp5Um/azy23QOrU1BPszXePHamz/FMkdZCaQ0WSuqj0DnGvy/3f1oPPoeUcbTAs+H6nmEU34hf
f8D2C1BLBwiLXKdKGgEAAD4EAABQSwECFAAUAAAIAABIB4hEXsYyDCcAAAAnAAAACAAAAAAAAAAA
AAAAAAAAAAAAbWltZXR5cGVQSwECFAAUAAAIAABIB4hEsG9q6B0SAAAdEgAAGAAAAAAAAAAAAAAA
AABNAAAAVGh1bWJuYWlscy90aHVtYm5haWwucG5nUEsBAhQAFAAICAgASAeIREwit+caBAAAlhIA
AAsAAAAAAAAAAAAAAAAAoBIAAGNvbnRlbnQueG1sUEsBAhQAFAAICAgASAeIRO6sAE2NCwAAQUEA
AAoAAAAAAAAAAAAAAAAA8xYAAHN0eWxlcy54bWxQSwECFAAUAAgICABIB4hEqiUEzmkFAAAsIwAA
DAAAAAAAAAAAAAAAAAC4IgAAc2V0dGluZ3MueG1sUEsBAhQAFAAACAAASAeIRKAoyivbAwAA2wMA
AAgAAAAAAAAAAAAAAAAAWygAAG1ldGEueG1sUEsBAhQAFAAICAgASAeIRLT3aNIFAQAAgwMAAAwA
AAAAAAAAAAAAAAAAXCwAAG1hbmlmZXN0LnJkZlBLAQIUABQACAgIAEgHiEQAAAAAAgAAAAAAAAAn
AAAAAAAAAAAAAAAAAJstAABDb25maWd1cmF0aW9uczIvYWNjZWxlcmF0b3IvY3VycmVudC54bWxQ
SwECFAAUAAAIAABIB4hEAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAADyLQAAQ29uZmlndXJhdGlv
bnMyL3N0YXR1c2Jhci9QSwECFAAUAAAIAABIB4hEAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAAAq
LgAAQ29uZmlndXJhdGlvbnMyL3BvcHVwbWVudS9QSwECFAAUAAAIAABIB4hEAAAAAAAAAAAAAAAA
HwAAAAAAAAAAAAAAAABiLgAAQ29uZmlndXJhdGlvbnMyL2ltYWdlcy9CaXRtYXBzL1BLAQIUABQA
AAgAAEgHiEQAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAAAJ8uAABDb25maWd1cmF0aW9uczIvcHJv
Z3Jlc3NiYXIvUEsBAhQAFAAACAAASAeIRAAAAAAAAAAAAAAAABgAAAAAAAAAAAAAAAAA2S4AAENv
bmZpZ3VyYXRpb25zMi90b29sYmFyL1BLAQIUABQAAAgAAEgHiEQAAAAAAAAAAAAAAAAaAAAAAAAA
AAAAAAAAAA8vAABDb25maWd1cmF0aW9uczIvdG9vbHBhbmVsL1BLAQIUABQAAAgAAEgHiEQAAAAA
AAAAAAAAAAAYAAAAAAAAAAAAAAAAAEcvAABDb25maWd1cmF0aW9uczIvZmxvYXRlci9QSwECFAAU
AAAIAABIB4hEAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAAB9LwAAQ29uZmlndXJhdGlvbnMyL21l
bnViYXIvUEsBAhQAFAAICAgASAeIRItcp0oaAQAAPgQAABUAAAAAAAAAAAAAAAAAsy8AAE1FVEEt
SU5GL21hbmlmZXN0LnhtbFBLBQYAAAAAEQARAHAEAAAQMQAAAAA=
            </field>    
        </record>

<!-- STYLESHEET -->
        <record model="report.stylesheets" id="stt_courrier_id">
            <field name="name">STT for Courrier</field>
            <field name="report_styles">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
qCYbJAuOWkKSZhUFmoZYi8wD4xMEu9TxT5x0mPRBlB9YR/C4pTshJZJGS9WSPs0hEDwrelR1xSqd
NR2hhJjDpT57igNmwOrXMUQxcUQhZR+ePsJgmqH+dEp17IT6JBGQaaOirrqGusuapf5GvYE6NrfA
dezMEri7mLZ0n/07wkT5O5P33tJvxF7gu8AJE7fr7xUUwdzFrvcTY1t1j4Sg+JuDCLTLSrFx/cq+
mPRlR6B2IW7yZXjOESIR3sHnIK9ERuZjImAbUumnlKOICUGaUA+A0CQNicGLC1ezwIi2XAB1AAdd
jdiLJkpQkon/GSuP+Iai78lBS3MmB4n0TeJKq6XZ+m6n1Xc06OFxdG0VthKDWVtxkagem8Ars7jK
kB3wHR0atQSfSVJhI4PxpoM4ks0/E234dGUbiH7mJnxgMmGibfWtu3Oqx91j948cG9jDUytRHWTe
0p5xCc611k7Xv+7YLTMy5NWR1raz9nvzyZHmu2x51G7m5KP8lT4wE7apVVolkNbWe7xwxN7GsViR
JlO2NZdv3kqkDJbFXz3q+3+wSj84VXd+0FEt+qlL8w9QSwcIqiUEzmkFAAAsIwAAUEsDBBQAAAgA
ABm2iESlw2++2wMAANsDAAAIAAAAbWV0YS54bWw8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5n
PSJVVEYtOCI/Pgo8b2ZmaWNlOmRvY3VtZW50LW1ldGEgeG1sbnM6b2ZmaWNlPSJ1cm46b2FzaXM6
bmFtZXM6dGM6b3BlbmRvY3VtZW50OnhtbG5zOm9mZmljZToxLjAiIHhtbG5zOnhsaW5rPSJodHRw
Oi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2Vs
ZW1lbnRzLzEuMS8iIHhtbG5zOm1ldGE9InVybjpvYXNpczpuYW1lczp0YzpvcGVuZG9jdW1lbnQ6
eG1sbnM6bWV0YToxLjAiIHhtbG5zOm9vbz0iaHR0cDovL29wZW5vZmZpY2Uub3JnLzIwMDQvb2Zm
aWNlIiB4bWxuczpncmRkbD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy9nL2RhdGEtdmlldyMiIG9m
ZmljZTp2ZXJzaW9uPSIxLjIiPjxvZmZpY2U6bWV0YT48bWV0YTpjcmVhdGlvbi1kYXRlPjIwMTQt
MDEtMDhUMjI6NTI6MjM8L21ldGE6Y3JlYXRpb24tZGF0ZT48ZGM6ZGF0ZT4yMDE0LTA0LTA5VDA5
OjQ4OjUxPC9kYzpkYXRlPjxtZXRhOmVkaXRpbmctZHVyYXRpb24+UDBEPC9tZXRhOmVkaXRpbmct
ZHVyYXRpb24+PG1ldGE6ZWRpdGluZy1jeWNsZXM+MzwvbWV0YTplZGl0aW5nLWN5Y2xlcz48bWV0
YTpnZW5lcmF0b3I+TGlicmVPZmZpY2UvMy41JExpbnV4X1g4Nl82NCBMaWJyZU9mZmljZV9wcm9q
ZWN0LzM1MG0xJEJ1aWxkLTI8L21ldGE6Z2VuZXJhdG9yPjxkYzpjcmVhdG9yPkwuIEZSQU5DT0lT
PC9kYzpjcmVhdG9yPjxtZXRhOmRvY3VtZW50LXN0YXRpc3RpYyBtZXRhOnRhYmxlLWNvdW50PSIw
IiBtZXRhOmltYWdlLWNvdW50PSIwIiBtZXRhOm9iamVjdC1jb3VudD0iMCIgbWV0YTpwYWdlLWNv
dW50PSIxIiBtZXRhOnBhcmFncmFwaC1jb3VudD0iNCIgbWV0YTp3b3JkLWNvdW50PSI0OCIgbWV0
YTpjaGFyYWN0ZXItY291bnQ9IjMxMSIgbWV0YTpub24td2hpdGVzcGFjZS1jaGFyYWN0ZXItY291
bnQ9IjI2OCIvPjwvb2ZmaWNlOm1ldGE+PC9vZmZpY2U6ZG9jdW1lbnQtbWV0YT5QSwMEFAAICAgA
GbaIRAAAAAAAAAAAAAAAAAwAAABtYW5pZmVzdC5yZGbNk81ugzAQhO88hWXO2EAvBQVyKMq5ap/A
NYZYBS/ymhLevo6TVlGkquqf1OOuRjPfjrSb7WEcyIuyqMFUNGMpJcpIaLXpKzq7Lrml2zra2LYr
H5od8WqDpZ8qunduKjlfloUtNwxsz7OiKHia8zxPvCLB1ThxSAzGtI4ICR6NQmn15HwaOc7iCWZX
UXTroJB59yA9i906qaCyCmG2Ur2HtiCRgUCNCUzKhHSDHLpOS8UzlvNROcGh7eLHYL3Tg6I8YPAr
js/Y3ogMpuVe4L2w7lyD33yVaHruY3p108Xx3yOUYJwy7k/quzt5/+f+Ls//GeKvtHZEbEDOo2f6
kOe08h9VR69QSwcItPdo0gUBAACDAwAAUEsDBBQACAgIABm2iEQAAAAAAAAAAAAAAAAnAAAAQ29u
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
ABEAEQBwBAAAFC4AAAAA
            </field>
        </record>

<record model="report.stylesheets" id="stt_etat_id">
            <field name="name">STT for Etat</field>
            <field name="report_styles">UEsDBBQAAAgAAKZ5UkRexjIMJwAAACcAAAAIAAAAbWltZXR5cGVhcHBsaWNhdGlvbi92bmQub2Fz
aXMub3BlbmRvY3VtZW50LnRleHRQSwMEFAAACAAApnlSRLtQU3T+EQAA/hEAABgAAABUaHVtYm5h
aWxzL3RodW1ibmFpbC5wbmeJUE5HDQoaCgAAAA1JSERSAAAAtQAAAQAIAgAAAHpBoIwAABHFSURB
VHic7Z0JXFTXvcfvHYZ12DGCsssmq4jirqgYm5oYDRrjvjTGlzYvn9okbT/68upL06SvfZ+26SeN
ryaN71ObqDHL07wa0wguUVG0qCCguICyqIAgsg4wM/edmYPjleUfHGYB5vf95DOeOXPuuefO/c69
v3vuDFFKkiQA0AtKWw8ADGjgB6CAH4ACfgAK+AEo4AeggB+AAn50RdK1akVXpWjrcQwM7M6PdH+V
2nnsibLjoijyuUFjgZefD1D9PWTz7ZzNXep5ubHxvIdHsq0Gb33szo/e5osLK0/HB05ghWMN2nf3
bWRCdKnnzAubfKy21QrjHCDYnR+Hqlt4oYsoXAJW6Tv61WcD3IyvGuv5U7uSQ7BDP7rTRZTaol9p
JAH5g2N3fvQ9f8xPnvB/50/zE01DwzkWO3j44DV2cl/T7vzoe/5Quoayp8sTRu4suMljB39kNbsL
b1l10LbD7vx41Pzx8YXKj++34eFDXjPksTs/5PCpji6i1F36XR8X7JJRhuTEyZD1g+WMrKrmqSHT
+jjVsf63+/7yswX81e9cVuHg5j/hLbYgb2w8JhkrhwxD1g8iP3aPGmuDPT746dN/+Vmflo3x9WEF
tqBgkGbWY66ssCRC2HOts3IoMWT94J9pdgAQ+hw1OOw08U3VQ8vKjxx8WZ+YV9iCXXo+aOjNkttk
A4asHz3Cdqf83HG3+PeCoE8b3AC+s+XnDrkZU4Kn8hp2rdtjRulLcBl02JcfwiOeO3psZldT7Hbn
x3eed+TnDvlUWI+LDHnszo8eke91+fx6jzbITzpDHrvzw5g/sstP0Be9xtl0uQ29nXSGKnbnR9/n
16f5ushzRpcb/XaC3fkhzx9yervo7e1Gv51goh/s4+UblVF35QvjITpzz6ZIl+JXhN9/Pj/UGOte
SA3ZnluxImH4N8L3qi7s2PH2q6s3/67LjILNMWF+3X7ox/FDp5M/m7Pk11ue2rbUeYcw/99l1fr3
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
AT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8
ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQ
wA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/
AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU
8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAP
QAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF
/AAU8ANQwA9AAT8ABfwAFPADUMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AAT8ABfwAFPAD
UMAPQAE/AAX8ABTwA1DAD0ABPwAF/AAU8ANQwA9AYUd+iKLIHiVJktf0+FRe372yy1KM89frk8O8
Lb8FNmCI+3Gv6N7TaSOO1rQsi5meXXZ8Ssg0tncbGs55eCSPe8yN1fCdfbL8xOTgqaw9q4z2HSd0
kyC3Uc0eGxvPswVnBo3nlbxNd+2GEkPaD0mz4qkVWdUtrLj78vFdwVPle/G11z6afL+GeSMZYDs7
t+bYLnkfhgYvx88xLnu4/AwvnCu9yxu03i06l1/k4+MzJ3Tkjvq2KZ5O1tk+KzAE/fhlZuUXnx5u
+fTNy3XF+0v3K/Ufb8F4qOCP7HCyq/gYL6f7q1gDXiPIjhxpj7l9e6eVl98t+Ee0bwwrsD6NKxob
7sNfnZmwLqcyR96/DTbbMgxBP7a9vfVa5lsu21YKssO+8VDBH7kKvJxV1WxcVr5r2VnJWB7nqZKb
wWlrussLTA7jskNJDmHA+tFWW+HsF9S9vsunc9dvvlj284wucbJMrXFR9NytPGMK/d6XTioTM2lv
WzcAGaB+uAdN0ajLjYfro0ffSUvbyMrsNCHcz4n8JVY2Vi6M1GfMEBclP4OwzMFPH8O9U9gBg4VQ
QXYeYUuxRTw9x/I19nZd01L9kcp/1Wc1LQEdhdNGpsoHYwynxh7YOajWN/bG2dc9vFJ5ZeO9M+6e
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
AfwChV9XpgcsdBPPmE18Y1VTljxyagOaKRbPdVf2uHaG5E2lDMc9F/uUKEXxPDDDLKraGEVshx5z
lXwA0mixhtZK6dnWVOVVNtgBFgop/LRNJrWJy0cAFxVNPVpzaguWuF8JOX3Zn/w9QBctlSLRQxDU
T99IlGeYLb/6HvAZTZvFJlHwoNiSwtF9aVnXQUg9ZOGQ6hulWDswn8/LOYBJhjzCjptP0u6Lhr4I
cx5/AiqiwMVeZ+xud9yXIQk1udBUf5bo20wEiUhFlRuM9akUpwKXjqA1BJLBlmd9Y5QNijqWFaEO
gnmREwVsYQngvS262CzChCXHf0kgdtOv/DC0iRvFLCAHY0ypzfZhV3oIlGUZe1xJVJMNkgVnLXOS
ZhUFmoZYi8wj4xMEu9TxD5y0mQxAlB9YW/DY1+05JZJGS+XLgOYQCF8VPao6Yp3Omo5QQszhUp+9
xCEzYPXrGKKYOKKQso9PH2EwzVB/OqU6dkJ9kgjItFBRV82h7rJmqb9Rb6COzS1wHTuzBO4upi3d
Z/+OMFHBzuR9sPQbsTf4JnDCxEP+wYIiWLjY9X5ibKvukRAUf3EQoXZZKTaun9knk75sC9QuxM1+
Gb7nCJEI7+hzkHciI/MxEbANqfRTylHEhCBNqAdAaJKGxOD1tatZYERbLoA6gAuYEX3RSAlKMvE/
c+UJX1H0IznwNWdykMjAJK7EWpqub3Zc/Y0IPT6Oji1DPzGY9RUXieqxCbxTi6sM2Qnf0amRL/hM
kgwbGYw3LcSRbv6RaMOna9tB9Cs38ycmEyZaVuC6O6h63j13/8y5gT09tRrVQeYt7xmX4MzFdrr+
vGX7ZmTIqyOxbYft3w0oJ5rvsNVJu7knH+Wv9ImZeYt6pZUCaW39jhdO2Ns4FmsSZcr25vLNW42U
wbL4s0f98C9W6Ren6s5POqpFP3Zp/gNQSwcIoBzP92UFAAAuIwAAUEsDBBQAAAgAAKZ5UkTW4m7N
vgMAAL4DAAAIAAAAbWV0YS54bWw8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJVVEYtOCI/
Pgo8b2ZmaWNlOmRvY3VtZW50LW1ldGEgeG1sbnM6b2ZmaWNlPSJ1cm46b2FzaXM6bmFtZXM6dGM6
b3BlbmRvY3VtZW50OnhtbG5zOm9mZmljZToxLjAiIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3Lncz
Lm9yZy8xOTk5L3hsaW5rIiB4bWxuczpkYz0iaHR0cDovL3B1cmwub3JnL2RjL2VsZW1lbnRzLzEu
MS8iIHhtbG5zOm1ldGE9InVybjpvYXNpczpuYW1lczp0YzpvcGVuZG9jdW1lbnQ6eG1sbnM6bWV0
YToxLjAiIHhtbG5zOm9vbz0iaHR0cDovL29wZW5vZmZpY2Uub3JnLzIwMDQvb2ZmaWNlIiB4bWxu
czpncmRkbD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy9nL2RhdGEtdmlldyMiIG9mZmljZTp2ZXJz
aW9uPSIxLjIiPjxvZmZpY2U6bWV0YT48bWV0YTpjcmVhdGlvbi1kYXRlPjIwMTMtMTItMDJUMjE6
MDY6NTQ8L21ldGE6Y3JlYXRpb24tZGF0ZT48bWV0YTpnZW5lcmF0b3I+TGlicmVPZmZpY2UvMy41
JExpbnV4X1g4Nl82NCBMaWJyZU9mZmljZV9wcm9qZWN0LzM1MG0xJEJ1aWxkLTI8L21ldGE6Z2Vu
ZXJhdG9yPjxkYzpkYXRlPjIwMTQtMDItMTlUMDI6MTM6MTE8L2RjOmRhdGU+PG1ldGE6ZWRpdGlu
Zy1kdXJhdGlvbj5QVDQ3TTMxUzwvbWV0YTplZGl0aW5nLWR1cmF0aW9uPjxtZXRhOmVkaXRpbmct
Y3ljbGVzPjI2PC9tZXRhOmVkaXRpbmctY3ljbGVzPjxtZXRhOmRvY3VtZW50LXN0YXRpc3RpYyBt
ZXRhOnRhYmxlLWNvdW50PSIxIiBtZXRhOmltYWdlLWNvdW50PSIwIiBtZXRhOm9iamVjdC1jb3Vu
dD0iMCIgbWV0YTpwYWdlLWNvdW50PSIxIiBtZXRhOnBhcmFncmFwaC1jb3VudD0iMjQiIG1ldGE6
d29yZC1jb3VudD0iNjUiIG1ldGE6Y2hhcmFjdGVyLWNvdW50PSI0NTEiIG1ldGE6bm9uLXdoaXRl
c3BhY2UtY2hhcmFjdGVyLWNvdW50PSI0MTAiLz48L29mZmljZTptZXRhPjwvb2ZmaWNlOmRvY3Vt
ZW50LW1ldGE+UEsDBBQACAgIAKZ5UkQAAAAAAAAAAAAAAAAMAAAAbWFuaWZlc3QucmRmzZPNboMw
EITvPIVlzthALwUFcijKuWqfwDWGWAUv8poS3r6Ok1ZRpKrqn9TjrkYz3460m+1hHMiLsqjBVDRj
KSXKSGi16Ss6uy65pds62ti2Kx+aHfFqg6WfKrp3bio5X5aFLTcMbM+zoih4mvM8T7wiwdU4cUgM
xrSOCAkejUJp9eR8GjnO4glmV1F066CQefcgPYvdOqmgsgphtlK9h7YgkYFAjQlMyoR0gxy6TkvF
M5bzUTnBoe3ix2C904OiPGDwK47P2N6IDKblXuC9sO5cg998lWh67mN6ddPF8d8jlGCcMu5P6rs7
ef/n/i7P/xnir7R2RGxAzqNn+pDntPIfVUevUEsHCLT3aNIFAQAAgwMAAFBLAwQUAAgICACmeVJE
AAAAAAAAAAAAAAAAJwAAAENvbmZpZ3VyYXRpb25zMi9hY2NlbGVyYXRvci9jdXJyZW50LnhtbAMA
UEsHCAAAAAACAAAAAAAAAFBLAwQUAAAIAACmeVJEAAAAAAAAAAAAAAAAGgAAAENvbmZpZ3VyYXRp
b25zMi9zdGF0dXNiYXIvUEsDBBQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAaAAAAQ29uZmlndXJhdGlv
bnMyL3BvcHVwbWVudS9QSwMEFAAACAAApnlSRAAAAAAAAAAAAAAAAB8AAABDb25maWd1cmF0aW9u
czIvaW1hZ2VzL0JpdG1hcHMvUEsDBBQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAcAAAAQ29uZmlndXJh
dGlvbnMyL3Byb2dyZXNzYmFyL1BLAwQUAAAIAACmeVJEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3Vy
YXRpb25zMi90b29sYmFyL1BLAwQUAAAIAACmeVJEAAAAAAAAAAAAAAAAGgAAAENvbmZpZ3VyYXRp
b25zMi90b29scGFuZWwvUEsDBBQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAYAAAAQ29uZmlndXJhdGlv
bnMyL2Zsb2F0ZXIvUEsDBBQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAYAAAAQ29uZmlndXJhdGlvbnMy
L21lbnViYXIvUEsDBBQACAgIAKZ5UkQAAAAAAAAAAAAAAAAVAAAATUVUQS1JTkYvbWFuaWZlc3Qu
eG1srVTLbsMgELznKyyulaHNqUJxcqjUL0g/gOK1gwQLgiWK/744ah5V5SpWfdvH7MwIFja7k7PV
EWIyHhv2wp9ZBah9a7Bv2Mf+vX5lu+1q4xSaDhLJS1CVOUzXtGE5ovQqmSRROUiStPQBsPU6O0CS
P/HyrHTN7gys2XZV3fQ6Y6Eu83G4obtsbR0UHRompkhuZQetUTUNARqmQrBGKyowccSWnw3ze5+c
4ERMzPGwP2T3icrYJOgS8oD9hAfjVA9i7M9S0R5p9FfOcYJ4dC7G9izeRIOFtDwtEJUdWp7YAanl
Sb9rPLbdA6tTUE+zNd48dqbP8UyR1kJpDRZK6qPQOca/L/d/Wg8+h5RxtMCz4fqeYRTfiF9/wPYL
UEsHCItcp0oaAQAAPgQAAFBLAQIUABQAAAgAAKZ5UkRexjIMJwAAACcAAAAIAAAAAAAAAAAAAAAA
AAAAAABtaW1ldHlwZVBLAQIUABQAAAgAAKZ5UkS7UFN0/hEAAP4RAAAYAAAAAAAAAAAAAAAAAE0A
AABUaHVtYm5haWxzL3RodW1ibmFpbC5wbmdQSwECFAAUAAgICACmeVJEopAb/O0DAAAeEgAACwAA
AAAAAAAAAAAAAACBEgAAY29udGVudC54bWxQSwECFAAUAAgICACmeVJEVE2ewIUNAADhWQAACgAA
AAAAAAAAAAAAAACnFgAAc3R5bGVzLnhtbFBLAQIUABQACAgIAKZ5UkSgHM/3ZQUAAC4jAAAMAAAA
AAAAAAAAAAAAAGQkAABzZXR0aW5ncy54bWxQSwECFAAUAAAIAACmeVJE1uJuzb4DAAC+AwAACAAA
AAAAAAAAAAAAAAADKgAAbWV0YS54bWxQSwECFAAUAAgICACmeVJEtPdo0gUBAACDAwAADAAAAAAA
AAAAAAAAAADnLQAAbWFuaWZlc3QucmRmUEsBAhQAFAAICAgApnlSRAAAAAACAAAAAAAAACcAAAAA
AAAAAAAAAAAAJi8AAENvbmZpZ3VyYXRpb25zMi9hY2NlbGVyYXRvci9jdXJyZW50LnhtbFBLAQIU
ABQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAH0vAABDb25maWd1cmF0aW9uczIv
c3RhdHVzYmFyL1BLAQIUABQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAALUvAABD
b25maWd1cmF0aW9uczIvcG9wdXBtZW51L1BLAQIUABQAAAgAAKZ5UkQAAAAAAAAAAAAAAAAfAAAA
AAAAAAAAAAAAAO0vAABDb25maWd1cmF0aW9uczIvaW1hZ2VzL0JpdG1hcHMvUEsBAhQAFAAACAAA
pnlSRAAAAAAAAAAAAAAAABwAAAAAAAAAAAAAAAAAKjAAAENvbmZpZ3VyYXRpb25zMi9wcm9ncmVz
c2Jhci9QSwECFAAUAAAIAACmeVJEAAAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAAABkMAAAQ29uZmln
dXJhdGlvbnMyL3Rvb2xiYXIvUEsBAhQAFAAACAAApnlSRAAAAAAAAAAAAAAAABoAAAAAAAAAAAAA
AAAAmjAAAENvbmZpZ3VyYXRpb25zMi90b29scGFuZWwvUEsBAhQAFAAACAAApnlSRAAAAAAAAAAA
AAAAABgAAAAAAAAAAAAAAAAA0jAAAENvbmZpZ3VyYXRpb25zMi9mbG9hdGVyL1BLAQIUABQAAAgA
AKZ5UkQAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAAgxAABDb25maWd1cmF0aW9uczIvbWVudWJh
ci9QSwECFAAUAAgICACmeVJEi1ynShoBAAA+BAAAFQAAAAAAAAAAAAAAAAA+MQAATUVUQS1JTkYv
bWFuaWZlc3QueG1sUEsFBgAAAAARABEAcAQAAJsyAAAAAA==
</field>
</record>


<record model="report.stylesheets" id="stt_courrier1_id">
            <field name="name">STT for Courrier PageNumber</field>
            <field name="report_styles">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
NhZdLBZhwpLjvyQQuZlXzSCwhRtGzCcHI0yozc5hV3oIlGUZe2ZJVJNuJHNOW2YkzUoKNG1iLTIP
zE8Q7BLHv3DcZtIHUXxibcGjpm7PqJC0tVRN6dM+BIIXRY+qjlgle01HKCHmcKnPnqKAGbD6dQRh
RByRS9mHl48wmFSoN5lQHzuhPkkEZFqoaKquoe6yZ2m+0Wygic0tcB07swTuLqct3Wf/DjFW/s7O
e2/pN2Sv8EPgmInb9VcLymDuYtV7sbGjuktCUPzNQQTaZafYvJ7T7yY92RaoXYibbBmecYRIhHfw
OcgbkZH5iAjYplT4KeUwZEKQJtR9IDRJQ2KwVnO1FxjSkgugCeBgqhF70Y4SlGTif7aVR3xG0ffk
oKk5k/1Y+iZ2pdWSav2wu9UPNOjheXRsFzZjg+lYcVGoLhvDG7O4qpDd4Ds6NGoKPpWkwoYGo80E
cSSbf8Xa8MnKDhD9ws3sgcmYiZbVt+7OqR53j90/c2xgD0+tRHVQeUt7xiU411o7iX89sZtmaMir
I61t99of7U+ONN9hy6NWM6MexUf6wMysRaPSKoGktz7ihSPWNorEijSZsqO5ePNWIqWwzP/qkfMj
g9wPTuWdn3WU837w0vgDUEsHCGzWpdhwBQAAMiMAAFBLAwQUAAAIAABVLYNEiLbfA+EDAADhAwAA
CAAAAG1ldGEueG1sPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPG9mZmlj
ZTpkb2N1bWVudC1tZXRhIHhtbG5zOm9mZmljZT0idXJuOm9hc2lzOm5hbWVzOnRjOm9wZW5kb2N1
bWVudDp4bWxuczpvZmZpY2U6MS4wIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5
OS94bGluayIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvIiB4bWxu
czptZXRhPSJ1cm46b2FzaXM6bmFtZXM6dGM6b3BlbmRvY3VtZW50OnhtbG5zOm1ldGE6MS4wIiB4
bWxuczpvb289Imh0dHA6Ly9vcGVub2ZmaWNlLm9yZy8yMDA0L29mZmljZSIgeG1sbnM6Z3JkZGw9
Imh0dHA6Ly93d3cudzMub3JnLzIwMDMvZy9kYXRhLXZpZXcjIiBvZmZpY2U6dmVyc2lvbj0iMS4y
Ij48b2ZmaWNlOm1ldGE+PG1ldGE6Y3JlYXRpb24tZGF0ZT4yMDE0LTAxLTA4VDIyOjUyOjIzPC9t
ZXRhOmNyZWF0aW9uLWRhdGU+PGRjOmRhdGU+MjAxNC0wNC0wM1QxNjo0Mjo0MzwvZGM6ZGF0ZT48
bWV0YTplZGl0aW5nLWR1cmF0aW9uPlBUMTFNNDRTPC9tZXRhOmVkaXRpbmctZHVyYXRpb24+PG1l
dGE6ZWRpdGluZy1jeWNsZXM+MTI8L21ldGE6ZWRpdGluZy1jeWNsZXM+PG1ldGE6Z2VuZXJhdG9y
PkxpYnJlT2ZmaWNlLzMuNSRMaW51eF9YODZfNjQgTGlicmVPZmZpY2VfcHJvamVjdC8zNTBtMSRC
dWlsZC0yPC9tZXRhOmdlbmVyYXRvcj48ZGM6Y3JlYXRvcj5MLiBGUkFOQ09JUzwvZGM6Y3JlYXRv
cj48bWV0YTpkb2N1bWVudC1zdGF0aXN0aWMgbWV0YTp0YWJsZS1jb3VudD0iMCIgbWV0YTppbWFn
ZS1jb3VudD0iMCIgbWV0YTpvYmplY3QtY291bnQ9IjAiIG1ldGE6cGFnZS1jb3VudD0iMSIgbWV0
YTpwYXJhZ3JhcGgtY291bnQ9IjUiIG1ldGE6d29yZC1jb3VudD0iNDkiIG1ldGE6Y2hhcmFjdGVy
LWNvdW50PSIzMTQiIG1ldGE6bm9uLXdoaXRlc3BhY2UtY2hhcmFjdGVyLWNvdW50PSIyNzEiLz48
L29mZmljZTptZXRhPjwvb2ZmaWNlOmRvY3VtZW50LW1ldGE+UEsDBBQACAgIAFUtg0QAAAAAAAAA
AAAAAAAMAAAAbWFuaWZlc3QucmRmzZPNboMwEITvPIVlzthALwUFcijKuWqfwDWGWAUv8poS3r6O
k1ZRpKrqn9TjrkYz3460m+1hHMiLsqjBVDRjKSXKSGi16Ss6uy65pds62ti2Kx+aHfFqg6WfKrp3
bio5X5aFLTcMbM+zoih4mvM8T7wiwdU4cUgMxrSOCAkejUJp9eR8GjnO4glmV1F066CQefcgPYvd
OqmgsgphtlK9h7YgkYFAjQlMyoR0gxy6TkvFM5bzUTnBoe3ix2C904OiPGDwK47P2N6IDKblXuC9
sO5cg998lWh67mN6ddPF8d8jlGCcMu5P6rs7ef/n/i7P/xnir7R2RGxAzqNn+pDntPIfVUevUEsH
CLT3aNIFAQAAgwMAAFBLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3VyYXRpb25z
Mi9tZW51YmFyL1BLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3VyYXRpb25zMi9m
bG9hdGVyL1BLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAGAAAAENvbmZpZ3VyYXRpb25zMi90b29s
YmFyL1BLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAHAAAAENvbmZpZ3VyYXRpb25zMi9wcm9ncmVz
c2Jhci9QSwMEFAAACAAAVS2DRAAAAAAAAAAAAAAAABoAAABDb25maWd1cmF0aW9uczIvdG9vbHBh
bmVsL1BLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAGgAAAENvbmZpZ3VyYXRpb25zMi9wb3B1cG1l
bnUvUEsDBBQAAAgAAFUtg0QAAAAAAAAAAAAAAAAfAAAAQ29uZmlndXJhdGlvbnMyL2ltYWdlcy9C
aXRtYXBzL1BLAwQUAAAIAABVLYNEAAAAAAAAAAAAAAAAGgAAAENvbmZpZ3VyYXRpb25zMi9zdGF0
dXNiYXIvUEsDBBQACAgIAFUtg0QAAAAAAAAAAAAAAAAnAAAAQ29uZmlndXJhdGlvbnMyL2FjY2Vs
ZXJhdG9yL2N1cnJlbnQueG1sAwBQSwcIAAAAAAIAAAAAAAAAUEsDBBQACAgIAFUtg0QAAAAAAAAA
AAAAAAAVAAAATUVUQS1JTkYvbWFuaWZlc3QueG1srVTLbsMgELznKyyulaHNqUJxcqjUL0g/gOK1
gwQLgiWK/744ah5V5SpWfdvH7MwIFja7k7PVEWIyHhv2wp9ZBah9a7Bv2Mf+vX5lu+1q4xSaDhLJ
S1CVOUzXtGE5ovQqmSRROUiStPQBsPU6O0CSP/HyrHTN7gys2XZV3fQ6Y6Eu83G4obtsbR0UHRom
pkhuZQetUTUNARqmQrBGKyowccSWnw3ze5+c4ERMzPGwP2T3icrYJOgS8oD9hAfjVA9i7M9S0R5p
9FfOcYJ4dC7G9izeRIOFtDwtEJUdWp7YAanlSb9rPLbdA6tTUE+zNd48dqbP8UyR1kJpDRZK6qPQ
Oca/L/d/Wg8+h5RxtMCz4fqeYRTfiF9/wPYLUEsHCItcp0oaAQAAPgQAAFBLAQIUABQAAAgAAFUt
g0RexjIMJwAAACcAAAAIAAAAAAAAAAAAAAAAAAAAAABtaW1ldHlwZVBLAQIUABQAAAgAAFUtg0SQ
cH/Bww8AAMMPAAAYAAAAAAAAAAAAAAAAAE0AAABUaHVtYm5haWxzL3RodW1ibmFpbC5wbmdQSwEC
FAAUAAgICABVLYNEtB16cssDAADeEAAACwAAAAAAAAAAAAAAAABGEAAAY29udGVudC54bWxQSwEC
FAAUAAgICABVLYNE78F0RlsLAAA8RQAACgAAAAAAAAAAAAAAAABKFAAAc3R5bGVzLnhtbFBLAQIU
ABQACAgIAFUtg0Rs1qXYcAUAADIjAAAMAAAAAAAAAAAAAAAAAN0fAABzZXR0aW5ncy54bWxQSwEC
FAAUAAAIAABVLYNEiLbfA+EDAADhAwAACAAAAAAAAAAAAAAAAACHJQAAbWV0YS54bWxQSwECFAAU
AAgICABVLYNEtPdo0gUBAACDAwAADAAAAAAAAAAAAAAAAACOKQAAbWFuaWZlc3QucmRmUEsBAhQA
FAAACAAAVS2DRAAAAAAAAAAAAAAAABgAAAAAAAAAAAAAAAAAzSoAAENvbmZpZ3VyYXRpb25zMi9t
ZW51YmFyL1BLAQIUABQAAAgAAFUtg0QAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAAMrAABDb25m
aWd1cmF0aW9uczIvZmxvYXRlci9QSwECFAAUAAAIAABVLYNEAAAAAAAAAAAAAAAAGAAAAAAAAAAA
AAAAAAA5KwAAQ29uZmlndXJhdGlvbnMyL3Rvb2xiYXIvUEsBAhQAFAAACAAAVS2DRAAAAAAAAAAA
AAAAABwAAAAAAAAAAAAAAAAAbysAAENvbmZpZ3VyYXRpb25zMi9wcm9ncmVzc2Jhci9QSwECFAAU
AAAIAABVLYNEAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAACpKwAAQ29uZmlndXJhdGlvbnMyL3Rv
b2xwYW5lbC9QSwECFAAUAAAIAABVLYNEAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAADhKwAAQ29u
ZmlndXJhdGlvbnMyL3BvcHVwbWVudS9QSwECFAAUAAAIAABVLYNEAAAAAAAAAAAAAAAAHwAAAAAA
AAAAAAAAAAAZLAAAQ29uZmlndXJhdGlvbnMyL2ltYWdlcy9CaXRtYXBzL1BLAQIUABQAAAgAAFUt
g0QAAAAAAAAAAAAAAAAaAAAAAAAAAAAAAAAAAFYsAABDb25maWd1cmF0aW9uczIvc3RhdHVzYmFy
L1BLAQIUABQACAgIAFUtg0QAAAAAAgAAAAAAAAAnAAAAAAAAAAAAAAAAAI4sAABDb25maWd1cmF0
aW9uczIvYWNjZWxlcmF0b3IvY3VycmVudC54bWxQSwECFAAUAAgICABVLYNEi1ynShoBAAA+BAAA
FQAAAAAAAAAAAAAAAADlLAAATUVUQS1JTkYvbWFuaWZlc3QueG1sUEsFBgAAAAARABEAcAQAAEIu
AAAAAA==
</field>
</record>

<record model="report.stylesheets" id="stt_liaisonBDC_id">
            <field name="name">STT for Liaison BDC</field>
            <field name="report_styles">UEsDBBQAAAgAAKopbERexjIMJwAAACcAAAAIAAAAbWltZXR5cGVhcHBsaWNhdGlvbi92bmQub2Fz
aXMub3BlbmRvY3VtZW50LnRleHRQSwMEFAAACAAAqilsRMlBKVTNBQAAzQUAABgAAABUaHVtYm5h
aWxzL3RodW1ibmFpbC5wbmeJUE5HDQoaCgAAAA1JSERSAAAAxgAAAQAIAgAAAGc/nhcAAAWUSURB
VHic7dqxS1V9HMfxGzkYWuZgSyAYDW0O/QWB0ZhrQ0kILTVkcxAOzx8Q1CiIODiVDQ6io39AVGC0
BEFTi5VgYNHzo/M8h9vVx+d6+YRy7+s1yD3nnnO4F98cv55z+n7+/NmAnL6j/gB0G0kRJinCJEWY
pAiTFGGSIkxShEmKMEkRJqlWP378OHny5N71Dx8+vH///uvXr69cudLmLr1JUr+5d+/eu3fv3r59
++HDhxMnTlQ3QNfX12dmZt68eTM6Onrnzp2yvqy8fv36ixcvygbb29tXr169fPnykydPjvrjHwuS
+k3Joj7l1DfUJyYmysmp3qblRvvg4ODGxoazVE1SrTqIQ0/NJHU479+/Hxsbqxc/ffo0MjJyhJ/n
GJLU/j5+/Hj+/PlqbCp/6cq0tLa2Vl5fuHDh0qVLm5ub1Wbnzp3zwFkLSe2v9NRoGpuqnooyjA8M
DNSb6WkvSR1Oc0/sS1KE9WJS7VzM3NnZOXXq1H/t0ubl0DKKlfn95cuXExMTf+B7HFM9l1TzxczG
r996mYeqi5kPHjwo/76VxbJyaGhocHCwDOlbW1tlfpqenl5dXa0mpzaP0N/fX94ti9euXVteXu6d
C6E9l1TzxczGv/N1fTHz9u3bjT1Dd8lrZWWl3uWwR+i12zU9l1QjcTHzUEfoqZ4aXZ/UwsLCrVu3
6rt1jcPcFT5gr69fv05NTc3Pz585c+aAwzYfc3x8fGNjo+w1Nzc3PDyc/ZrHSjcnVV2oLL/FevHu
3bvtjEFra2v1QF0WS0DVjeGnT5/u7u729fVVJT179qw+bHnr8+fPZX19zLGxsb9+qbp89erVzZs3
y4B148aNixcvdvFo1c1JtYxE1WL7Y1D1ovpZ3Rgu3Xz79q2M7V++fCl9lNROnz5dbfD48ePmm81V
kc0foLwu25e9lpaWzp49+4e/+lHq5qT21dlk0/JsQinp+fPn1Vmw/cPu3asr9VxSKZ2V0fU9NSS1
V32ruNHRE57NQ31vktQ/EVQ/Jycn65XNs/wBT3hubW2V2ajad3FxsfHrWmgXT9//S1K/jeHLy8vN
b7X5hGfzvt+/f++1C1EtJHUQT3h2oPOkZmdng5+DY+jRo0cd7OUsRVjnSXWWMF3PWYowSREmKcIk
RZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYow
SREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIi
TFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZik
CJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREm
KcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKE
SYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMU
YZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIk
RZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYow
SREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIi
TFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRZikCJMUYZIiTFKESYowSREmKcIkRdjf
mKDh92hbs+8AAAAASUVORK5CYIJQSwMEFAAICAgAqilsRAAAAAAAAAAAAAAAAAsAAABjb250ZW50
LnhtbM1YUW/bNhB+368wNKBvCmO7AxotdoGtCDYgAYomG/ZWMBQls6VIjaQtu7++R9KiKcdyiRgY
9mJbvO/I7z7eHSnfvt82fLKhSjMpFtn06jqbUEFkyUS9yP56usvfZe+XP93KqmKEFqUk64YKkxMp
DHxPwFvowlsX2VqJQmLNdCFwQ3VhSCFbKnqvIkYXbi0/os2OJ7s7cOxt6NakOlvswBc/p6/swLF3
qXCX6myxIGrsXslU563meSVB9abFhh2x2HImvi6ylTFtgVDXdVfd/EqqGk1vbm6QswbCJODateIO
VRJEObWLaTS9mqIe21CDU/lZbExJrJtnqpKlwQa/2FW9qZMzYlOPSENWWCXnhgMPt3depm/vvIx9
G2xWI3vyDj2A0X083B9yQTWpa1nsQCqiWJscpkfH/lLKQNU6+AJ1dGfX12+Rf47Q3Vl4p5ihKoKT
s3CCOQmKy+aUaICbIkDkdGPTNCS+FUKPOMyQNwewLken/ufh/pGsaIMPYPZjcM6ENlgclFF2E0Yj
/QUp2kplgjBVesOE3ZoFbivT8PFyt9YeWquyPAkFOnMEpQ+Fl28Y7X4e9MPz+XCDHCgkLqO8r5KA
3YdDty1VzEaCuU2EvNEgGiSHbIvIe9gTVbNNm84mhCyr4xmPioNoPTenNHj6hKwtt0cCNL39StFR
OMuW/bnna0ajMFDB+ZdXmNC8pITr5a3vX2F44p8t70V2pyh9xEJPswm0qh7UML472LLJYAZrzGsq
IF6oHt0xrTN0fpV7Bi0XWqAUk0dwq04s9ga3Uv96DPSjZwko2WAxQLTMEGhwG6yYy4YfkPtAv+C/
15N9pKd5RZgTlHAplXCn1CL7TfIyQbAL+MYaneN8hEuQ8mJqkUynEipFyxecdtrQ5hJSURq/LsOT
GKCx6tuP47WBRDWM5G6eUJbuc8D34zSstafZYoVrhdtVb4ABe9N1D7n3eoR2X2IVcq+BawtVeYvr
HnHHlDafZ9efP8JY1q8f5s5baFRUGUZ1WMX67q9Llr+LM6J9JobZa2L4Qyr2TdoWamneM3GgaTth
zLCSXumOsnoFPVRAa8V8sEnelMMRhsU5gL2ecboNkPQg568J8slmjI3vd/+eos9vBQTqYsec1RAG
ocJdYLzHl7U2rNrlGm7vsEAnFRx3FeY6Kor/pXJv/3vl4D5kLzgpwg2DQKMVvDc8y3IXHuySy1v3
Lqfpv2t4YQ2d4OXgxA2VTLcc73K5NvBCRHMOV0m4GsE1wZl98H9yDpx9P7ccL5rsqe9al80CPy+e
5IN/93Syj6vWepc4G6BNRm3Xy44GO4JG/hlYfgdQSwcI46zk0+IDAABaEAAAUEsDBBQACAgIAKop
bEQAAAAAAAAAAAAAAAAKAAAAc3R5bGVzLnhtbO1c3Y7bNha+36cQXGwvNpBtyePxeNqZIkmTNti0
DZpsLvam4Ei0zUYSBYoaj/M0e5vX2LzYHpKiREmULXvs7GTQBEhgnkPy8Du//LG//+EujpxbzDJC
k6uBNxwPHJwENCTJ8mrwr3cv3YvBD9d/+54uFiTAlyEN8hgn3M34JsKZA52T7FIRrwY5Sy4pykh2
maAYZ5c8uKQpTnSnS5P7Uk6lWuRgfbtLZrM3x3e8b2fBW+uLbvrPLJnN3iFD676dBS9ganZf0L6d
77LIXVA3oHGKOGlIcReR5MPVYMV5ejkardfr4XoypGw58ubz+UhSS4GDki/NWSS5wmCEIywmy0be
0Btp3hhz1Fc+wWuKlOTxDWa9oUEctbSa3S57W8TtsgOaYIVYb9uQzHX1TsL+6p2EZt8Y8VWHTi5G
vwBR/vPL68oWWNx3LsFbgypgJO29TMVt9qeUlqKKDspBpbj+eHw2Up8N7vVW9jUjHDODPdjKHqAo
KBGnsQ004PNGwOHiW2GmmpuJRXeOPB0xnFLGS0EW/QMUoOOX7rXicdTtXoKqWZcsDK2sIM5kBK4G
hu7eErz+phZ/tuM/H0mm0qSzbMJtc7z7fSRorghx4MRFlDUiuz+41mF8QSGEL1CA3RAHUXb9vXK/
stlRnwVIV4OXDOO3KMm8gQOeppliEm0q2sCpjSCI7hInmBFQfrYmWTYYbZ/lNYGIAR5ME+ctdFtY
JvsWpTT7rsmoWrcKwGiMkhpHSngA/nmLGJHg7hDuR/wnep87xUrtchk8FpFQSFkig+zV4BmNwh6A
3UNeE6NtMjf4ekB5b9EMmGwG1QfLlkybjOP4PkIZZnyYhfeSYNTlfUW7qqm0pCFeoDwqKi09ciHU
kqF0RYKB5i0+uymD+ME4gcpMLCTjjH7AkBsjCsn4m4ux+DtwRClyuSBRVFKCBZ4tpgNnQS/XMJRL
Uy6DRkJd8bnokq3AitcuSJth7t5dDcbDSRBbiZsGkUNqdaESwW6WogDqIHdFGfkIQKBIsPoXW5lv
xaKCNiuE7r6jtlgtYxYgR7CONeErV1WWCxRlhgWliCGJdw1tSRL8Lso5FXOAWZEQU8WKonSF9ARS
jBuGEVRtoCIScE0RqVPIFtMQukfM5Tc1oyJJiEW+EhW4uRgtpJYRMgbYDU0zYXXdYpfsQu7WavIM
AwyJ0KqcvDAWznIsLUU2ZuQjSOr5KZdtEUqWOVpC04LJhoDmCWfCj34vl4851AfuB8wSKboa0Fil
GNOFLI1E2hoPp2mJjx5eUz+uNKWYRxOe/9oeUZSIEb7T0jZGLKkr0hyzJL36dVABWvPPPk5bamCw
1ZQAtNUmXeFExmU3QmEIaElZpENGJCal+D0tLs2TgOdqQOHQsEpYN6C/2yS1KbkhAcdMxCRQSky9
yl/qRpsCmJWzHGBZhtq6KoNTGp+YU1tRI1ed0kLltKWhWZPO8YzYtDGsY0fT8BiOEUlcsSvS1ue3
mNI8WzVY7uEhqtA1gliETeNR++8byoRDCGuD2A2mE6E0E6Z834ldRteNyaGl4ZofME5dTpeYr8QG
V7jeronNCZVFvwVHChGrisBWhNDKi1AGBaPwosqn2uP9jFFoOHPncNBQnt24dlES4bAmwzto+MMf
/3FDw41NrF2xLEYMAg1AlopEe+bLRFu131DOxaYPcrDnFySJsUzAiUzAKFqjTbYrqHREDOlFjYBx
VrnOgT5vHWEv9xUjVIazw2BsSoB4nEZoY6jJMcn3MYKD9btdt72X+xpSzSHr2GKrkRiyhwHVtOz3
0rLXf2HPkSysj6gjWAlDezph5WldTiiPSdUhnqwzszJJSIqsFvQZ37jbMTvytGoTPaBggVIdNjK9
VaAgKaiWzl0q6pdIjSlKejFJbx2/gvL87ogaJnK8rRo+krq+mBuIfCVOCL+kF+yHUWsj1WzQItKM
qK2y5w3ns6oo5psUxA1AfljoaGdvfzKcnzV7M7JcmUnCEGbrpq5nThEVjoiWz0Gn6ljVmlgEm9Pk
eYg6618f1I7z6kFqZsaoNRYaELsuFqNo1w6gv/mXhxQC/tewCjv0FZ9jMn2p8k6ebB8l/Z/N55Vt
F/W7VN6ahFDlVYzjMaQfB/6fTNX/Y52pUtgGyw2bnkQPgxdSQQk2W5nWW71ZStlsNGY/T7kT0lwY
fHlYtp8NFmv8k8r1i/Fb50fbk+R5MxkZdmallXH4fB8TfEkpf3QReDI8n3uHh+DZcGIeA37RGNzY
wdlC8D02eZ2hfq8iUp01RWSZlKhqc88zThYbV2zDYdI1GH5dt8crJXVIvmneoSiCdpUucuktkqHl
LlIkmnN1ttpS12+KMmgwRvgWRwW7WpRoAIMso24eu+LSFoHgJcxiR1J0bTqJSSrs0wWvk6e9WB8O
oxsgS3WIayXbsA2WYmzZuKBRRNc4dG82am8Edj0wJi9P/Sr/GA9n5zoaS+0QeQ59NXBNShH7VVjW
hApn66KB2oVnT6T9R4W0Nxx751akTUoNaU04OdKTR4a0P+sAuiQ0cJbtJ4f57JHBPPXPOnCuKA2g
FeHkSE8fGdKz2UUH0hWlgbQinBzp80eFtA+bFHs6NCk1pDXh5EjPHhnS/oU9HZqUBtKKcHKkLx4Z
0lN7mDYIDZynXyRIzx8ZzLN5F84VpQG0IpwcaW/8qKCeDMdn9nxoUmpQa8J9oK6TTPwTynEG29Bk
QZZ5cUdZEtxiP76glIvPNlV4xYrVK6lbFOVYHjzJRt0xMyCQDzLMPmq3LV5siPH021ex3v4S4iTs
EpDYBdTDC0QqCWzTdJ4VqLdlrQNFGzrFIBUKQrcFjSQBk+/dRfFnPMuTo1Wv8cTVPoxJAlcTtp7i
eM2DmR2PGVSzPAAVVyxDbyaPrtQbh+KURQrd/5JYijF8ahVEvLHJ46Qhj2psi1W0F9KBcPN6Nu0n
ybOjSzIfzmfTAyR5ateOG+AoagoCTY2Dp+rseTie621h7fwZCNOUOxmNSOh8M5Z/+p5H7+prnE+3
+fZWyamAOJJ8T/2Hq6gtFwdHUMzDWPgutlMDYUehbxSdDafzVhBVyT3bV5ATxNFSPkVkOHLrDOfT
6WT6j/0lPZ1TS1XvK8/ULs7O53WKFEMlJggrrE3yrHHmtkOKX9608DjskmSfCxFZ7fS4D9ljFS1f
OP0qel/r9L6nsVyd129quhnKu5qCZQ/oJodAZ7mWfzirFFU87I02sKeorzWNvYGFqeXkS1yWc14R
hnS79jR/VnuE0qiriymgbOcuIAXooWKDQRlniHBzK6Vfms3m9S1WlSouLua23dd4OJ00noiWqakY
rUBHft/ETEYo+LBkNIctZ/meHCWZUnSvL1iovZMbo7sq+MCEGl1jAhIDbsZ3ioqeGU7rGQlCqndR
yayf0Ls3GICV/ILHG3sWHrQQD9VtLNWmEuKOSLaagELhsmprozY8VabRyp/+vXoZrr7800rUdjPS
q13Jx1v1J85F20K+Kmi+EAEVmnBueSFSiWCbpBj9oIk7L87GdlurtxbWPB2butyAA4rNYf0bONUS
6uK2oe3h2f5D9WxPG2Rbl/aTbyvKftd3SPbzy7/cr7f7DQ/3gY7XXDvdYJcnW9ddHcq0T2EKQoyy
cowSnKJRjFTzpeajJRNiSx5VMhcHVqk+zjIqBfV+tbnI+vKgu9yGyH+LLUn9vEi1tao3IYfRtdgj
dHLDRmW0X4dnzQ5QbjdGgG3Clgm96uvl4njPVU+lxPfGkuWgGzZLbfrq/bvisDQVp6YNEfYR6tmB
QondwvWr5E8cyCNIiIEM3RLOPn/CSYK3CjfaiuG+oPpHA/XNP188efX8zbGAPVAwCeybFfpAP3+K
8ygjMIQ65sXcIVD0oiLPODhxghWKbxh2Uprxz58gB+Xs68T+/eT9kxevn/z09N8PAf73YMhg2DQm
2Jk476nICU8c8YMXEcowE5rgKE4pWLq8bIFi2Vmij18z8j+//VqBX+UEEkUImYtEJKBfZ/AZ/R9R
t8/9F1AHA2W2dI9YvCVv7nzKj0ZRtqtOe0lYJr+O8EZeWpYlufEYWrI4Jt1azFUvQvFdxwP2VrW3
rVzzO8s1f69yzW+Xa3uZoH9w9SUOFAtqcROe5sX1eojVj0LJTd+3Ef9O/ppWshmKnt8u+XeDa1tr
EZ+q0a6/VMS6Jwo/Mufl709/ff7bq+3J4uFIvKfeYFCMeVtzVXtbd86ecwSEb9oz6Nav1jbeff4U
/fc/l/uika4gYbfhKJvbeIycl+jugJkW6K49T9F4bNS7MZ42o97pNPIiRkSoZE+cxM9XRG2kyuZt
WHXLMzly8iyzUfswwZY+R/bTD93c+HnO6/8BUEsHCC23L0qwDAAA3lMAAFBLAwQUAAgICACqKWxE
AAAAAAAAAAAAAAAADAAAAHNldHRpbmdzLnhtbLVaTXPiOBC9769I+U4ITDa1oRKmgAwzmSGBAjKp
nZuwG9Aiq12SHODfT8s22SzYWWKsUyr+6Fa3Xr9+LXPzeROKsxdQmqO89RrnF94ZSB8DLhe33tO0
X/vL+9z+4wbnc+5DK0A/DkGamgZj6BF9Rq9L3Upv33qxki1kmuuWZCHolvFbGIHcvdZ6+3QrcZZe
2QguV7fe0pioVa+v1+vz9adzVIt64/r6up7c3T3qo5zzxbGu0qffukLEV0f2hXQxibPmxcVlPf3f
O8sW+SY1Ta+9y8Mu/PZN5iD9U+MGQpubs+yyXdqtRy5bLxzWr1nz8t777zs/6fmOAjbFyNvdMduI
7giUC699cVM/NHG82QHMjQu7zzwwy1zDzT8bjavTjH8DvljmL7tx1by8LGd9ssT1GALCGPSWTC5A
73mYIQpg0msbFUM5H/eyq3Ct4QEDKLI+Z0Ifbb4WsqjGZQAbCA6TlQ+w5B0qDbU9LuX3wd5StVHc
JttiuVl+Kwux12hcNhrl7RaVSpPquqxVzWcCqi+WxGzlpZ1YHRfWiK3AkjWS2e6iMRgWFmBJTPxC
DKdkah9tS1TmJEIasC3GpociDuV+UVdlvYu4qqyqD/PSZ75Blb/2xqeSq7/XExDgGwj6ii6UWHrO
xbfsUnQ7I6z8B6g5Ht9O0wuxYoaa80f66ogojCBB60ThgOgT813B/FWffBQ6OAEViYeOlGiS2HOw
dxq0E/sjtoAuBbFQGMv9NlBVmqawMSNKFSxRBLAP8spy9Y0HAUjrzJWHL2FktjZlrgA1UqgjKlhX
ASQ9w2kALALVVxhOwMT7Xa+yMEDlmmcari67XDK19epHsONCooI+V9oMSBPeE2dJcy8f43AGif6p
fvXUogSLNCRA6oEQI6ZY9VvxJDd9VD78AoVfNmYALHATz5TNOsaqpjR55NQGtFAsWup7OeDaGZJ3
lTKeDlzsU6wUxXPHDLOo6mEYsgN6zFTyEUijxRpaK6VnX1NVV9lgB1gopPDTNpnUJq5/ALioaOrR
mlNbsMT9TMgZyuHsnxG6aKkUiR6DoH76QqI8xWz11XeHj2h6LDKxgjvF1hSOHkrLug5CGiALxlTf
KMXWgflsXs4ATDLkBxy4+SDtPmkYiiDj8QegIvJd7HXK7nbHOzIgoSZXmurPEn2PCT8Wiahyg7Eh
leJc4NoRtMZAMtjybMcYZYOijmVFqINgnuRMAVtZAnhtiy42izBhyfFfEojc9KtOENjETSLmk4Mp
JtRm+7ArPQTKsow9riSqSQfJgrOWJUmzmgJNQ6xFZsn4BMEucfwdZz0mfRDVB9YTPOro3pISSaOl
6kif5hAInhU9qvpim8yajlBCzOFSnz1FATNg9esUwog4opCyy6ePMJhkaDifUx07oT5JBGS6qKir
ZlB3WbPU36g3UMfmFriOnVkCdxfTnu6zfycYK/9g8j5a+k3YC3wVOGPiLvtgQRGsXOz6MDa2VQ9I
CIq/OYhAu6wUG9fP9JPJUPYEahfiJl+G5xwhEuGVPgd5JTIyHxEB25AqP6WchEwI0oR6BIQmaUgM
Xl25mgUmtOUCqAO4gBnRF42UoCQT/zNXnvAVRf8gBx3NmRzF0jexK7GWpOurHVffEaHl4+jbMuzE
BtO+4iJRAzaDV2pxlSE74Ts6NeoIvpAkwyYGo10LcaSbv8fa8PnWdhD9zM3ygcmYia4VuO4Oqh4P
z90/cm5gT0+tRnWQect7xiU4M7GdrD9r2R0zMeTVkdi2w/Z7A8qJ5vtsc9Ju5uSj+pU+MLPsUq+0
UiCprfd44YS9jSKxJVGmbG+u3rzVSCksiz97FHxALvziVD/4SUe96Mcu7d9QSwcIZ6ujtGgFAAAu
IwAAUEsDBBQAAAgAAKopbESubrpR5AMAAOQDAAAIAAAAbWV0YS54bWw8P3htbCB2ZXJzaW9uPSIx
LjAiIGVuY29kaW5nPSJVVEYtOCI/Pgo8b2ZmaWNlOmRvY3VtZW50LW1ldGEgeG1sbnM6b2ZmaWNl
PSJ1cm46b2FzaXM6bmFtZXM6dGM6b3BlbmRvY3VtZW50OnhtbG5zOm9mZmljZToxLjAiIHhtbG5z
OnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIiB4bWxuczpkYz0iaHR0cDovL3B1
cmwub3JnL2RjL2VsZW1lbnRzLzEuMS8iIHhtbG5zOm1ldGE9InVybjpvYXNpczpuYW1lczp0Yzpv
cGVuZG9jdW1lbnQ6eG1sbnM6bWV0YToxLjAiIHhtbG5zOm9vbz0iaHR0cDovL29wZW5vZmZpY2Uu
b3JnLzIwMDQvb2ZmaWNlIiB4bWxuczpncmRkbD0iaHR0cDovL3d3dy53My5vcmcvMjAwMy9nL2Rh
dGEtdmlldyMiIG9mZmljZTp2ZXJzaW9uPSIxLjIiPjxvZmZpY2U6bWV0YT48bWV0YTpjcmVhdGlv
bi1kYXRlPjIwMTMtMDQtMDVUMjE6NTE6MzI8L21ldGE6Y3JlYXRpb24tZGF0ZT48ZGM6ZGF0ZT4y
MDE0LTAzLTEyVDE2OjEzOjE5PC9kYzpkYXRlPjxtZXRhOmVkaXRpbmctZHVyYXRpb24+UFQ2SDM0
TTE5UzwvbWV0YTplZGl0aW5nLWR1cmF0aW9uPjxtZXRhOmVkaXRpbmctY3ljbGVzPjMxPC9tZXRh
OmVkaXRpbmctY3ljbGVzPjxtZXRhOmdlbmVyYXRvcj5MaWJyZU9mZmljZS8zLjUkTGludXhfWDg2
XzY0IExpYnJlT2ZmaWNlX3Byb2plY3QvMzUwbTEkQnVpbGQtMjwvbWV0YTpnZW5lcmF0b3I+PGRj
OmNyZWF0b3I+TC4gRlJBTkNPSVM8L2RjOmNyZWF0b3I+PG1ldGE6ZG9jdW1lbnQtc3RhdGlzdGlj
IG1ldGE6dGFibGUtY291bnQ9IjIiIG1ldGE6aW1hZ2UtY291bnQ9IjAiIG1ldGE6b2JqZWN0LWNv
dW50PSIwIiBtZXRhOnBhZ2UtY291bnQ9IjEiIG1ldGE6cGFyYWdyYXBoLWNvdW50PSIxMyIgbWV0
YTp3b3JkLWNvdW50PSI0NSIgbWV0YTpjaGFyYWN0ZXItY291bnQ9IjM1NSIgbWV0YTpub24td2hp
dGVzcGFjZS1jaGFyYWN0ZXItY291bnQ9IjMyMyIvPjwvb2ZmaWNlOm1ldGE+PC9vZmZpY2U6ZG9j
dW1lbnQtbWV0YT5QSwMEFAAICAgAqilsRAAAAAAAAAAAAAAAAAwAAABtYW5pZmVzdC5yZGbNk81u
gzAQhO88hWXO2EAvBQVyKMq5ap/ANYZYBS/ymhLevo6TVlGkquqf1OOuRjPfjrSb7WEcyIuyqMFU
NGMpJcpIaLXpKzq7Lrml2zra2LYrH5od8WqDpZ8qunduKjlfloUtNwxsz7OiKHia8zxPvCLB1Thx
SAzGtI4ICR6NQmn15HwaOc7iCWZXUXTroJB59yA9i906qaCyCmG2Ur2HtiCRgUCNCUzKhHSDHLpO
S8UzlvNROcGh7eLHYL3Tg6I8YPArjs/Y3ogMpuVe4L2w7lyD33yVaHruY3p108Xx3yOUYJwy7k/q
uzt5/+f+Ls//GeKvtHZEbEDOo2f6kOe08h9VR69QSwcItPdo0gUBAACDAwAAUEsDBBQACAgIAKop
bEQAAAAAAAAAAAAAAAAnAAAAQ29uZmlndXJhdGlvbnMyL2FjY2VsZXJhdG9yL2N1cnJlbnQueG1s
AwBQSwcIAAAAAAIAAAAAAAAAUEsDBBQAAAgAAKopbEQAAAAAAAAAAAAAAAAaAAAAQ29uZmlndXJh
dGlvbnMyL3N0YXR1c2Jhci9QSwMEFAAACAAAqilsRAAAAAAAAAAAAAAAABoAAABDb25maWd1cmF0
aW9uczIvcG9wdXBtZW51L1BLAwQUAAAIAACqKWxEAAAAAAAAAAAAAAAAHwAAAENvbmZpZ3VyYXRp
b25zMi9pbWFnZXMvQml0bWFwcy9QSwMEFAAACAAAqilsRAAAAAAAAAAAAAAAABwAAABDb25maWd1
cmF0aW9uczIvcHJvZ3Jlc3NiYXIvUEsDBBQAAAgAAKopbEQAAAAAAAAAAAAAAAAYAAAAQ29uZmln
dXJhdGlvbnMyL3Rvb2xiYXIvUEsDBBQAAAgAAKopbEQAAAAAAAAAAAAAAAAaAAAAQ29uZmlndXJh
dGlvbnMyL3Rvb2xwYW5lbC9QSwMEFAAACAAAqilsRAAAAAAAAAAAAAAAABgAAABDb25maWd1cmF0
aW9uczIvZmxvYXRlci9QSwMEFAAACAAAqilsRAAAAAAAAAAAAAAAABgAAABDb25maWd1cmF0aW9u
czIvbWVudWJhci9QSwMEFAAICAgAqilsRAAAAAAAAAAAAAAAABUAAABNRVRBLUlORi9tYW5pZmVz
dC54bWytVMtuwyAQvOcrLK6Voc2pQnFyqNQvSD+A4rWDBAuCJYr/vjhqHlXlKlZ928fszAgWNruT
s9URYjIeG/bCn1kFqH1rsG/Yx/69fmW77WrjFJoOEslLUJU5TNe0YTmi9CqZJFE5SJK09AGw9To7
QJI/8fKsdM3uDKzZdlXd9DpjoS7zcbihu2xtHRQdGiamSG5lB61RNQ0BGqZCsEYrKjBxxJafDfN7
n5zgREzM8bA/ZPeJytgk6BLygP2EB+NUD2Lsz1LRHmn0V85xgnh0Lsb2LN5Eg4W0PC0QlR1antgB
qeVJv2s8tt0Dq1NQT7M13jx2ps/xTJHWQmkNFkrqo9A5xr8v939aDz6HlHG0wLPh+p5hFN+IX3/A
9gtQSwcIi1ynShoBAAA+BAAAUEsBAhQAFAAACAAAqilsRF7GMgwnAAAAJwAAAAgAAAAAAAAAAAAA
AAAAAAAAAG1pbWV0eXBlUEsBAhQAFAAACAAAqilsRMlBKVTNBQAAzQUAABgAAAAAAAAAAAAAAAAA
TQAAAFRodW1ibmFpbHMvdGh1bWJuYWlsLnBuZ1BLAQIUABQACAgIAKopbETjrOTT4gMAAFoQAAAL
AAAAAAAAAAAAAAAAAFAGAABjb250ZW50LnhtbFBLAQIUABQACAgIAKopbEQtty9KsAwAAN5TAAAK
AAAAAAAAAAAAAAAAAGsKAABzdHlsZXMueG1sUEsBAhQAFAAICAgAqilsRGero7RoBQAALiMAAAwA
AAAAAAAAAAAAAAAAUxcAAHNldHRpbmdzLnhtbFBLAQIUABQAAAgAAKopbESubrpR5AMAAOQDAAAI
AAAAAAAAAAAAAAAAAPUcAABtZXRhLnhtbFBLAQIUABQACAgIAKopbES092jSBQEAAIMDAAAMAAAA
AAAAAAAAAAAAAP8gAABtYW5pZmVzdC5yZGZQSwECFAAUAAgICACqKWxEAAAAAAIAAAAAAAAAJwAA
AAAAAAAAAAAAAAA+IgAAQ29uZmlndXJhdGlvbnMyL2FjY2VsZXJhdG9yL2N1cnJlbnQueG1sUEsB
AhQAFAAACAAAqilsRAAAAAAAAAAAAAAAABoAAAAAAAAAAAAAAAAAlSIAAENvbmZpZ3VyYXRpb25z
Mi9zdGF0dXNiYXIvUEsBAhQAFAAACAAAqilsRAAAAAAAAAAAAAAAABoAAAAAAAAAAAAAAAAAzSIA
AENvbmZpZ3VyYXRpb25zMi9wb3B1cG1lbnUvUEsBAhQAFAAACAAAqilsRAAAAAAAAAAAAAAAAB8A
AAAAAAAAAAAAAAAABSMAAENvbmZpZ3VyYXRpb25zMi9pbWFnZXMvQml0bWFwcy9QSwECFAAUAAAI
AACqKWxEAAAAAAAAAAAAAAAAHAAAAAAAAAAAAAAAAABCIwAAQ29uZmlndXJhdGlvbnMyL3Byb2dy
ZXNzYmFyL1BLAQIUABQAAAgAAKopbEQAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAAAHwjAABDb25m
aWd1cmF0aW9uczIvdG9vbGJhci9QSwECFAAUAAAIAACqKWxEAAAAAAAAAAAAAAAAGgAAAAAAAAAA
AAAAAACyIwAAQ29uZmlndXJhdGlvbnMyL3Rvb2xwYW5lbC9QSwECFAAUAAAIAACqKWxEAAAAAAAA
AAAAAAAAGAAAAAAAAAAAAAAAAADqIwAAQ29uZmlndXJhdGlvbnMyL2Zsb2F0ZXIvUEsBAhQAFAAA
CAAAqilsRAAAAAAAAAAAAAAAABgAAAAAAAAAAAAAAAAAICQAAENvbmZpZ3VyYXRpb25zMi9tZW51
YmFyL1BLAQIUABQACAgIAKopbESLXKdKGgEAAD4EAAAVAAAAAAAAAAAAAAAAAFYkAABNRVRBLUlO
Ri9tYW5pZmVzdC54bWxQSwUGAAAAABEAEQBwBAAAsyUAAAAA
</field>
</record>


<record model="report.stylesheets" id="stt_planningOR_id">
            <field name="name">STT for Planning OR</field>
            <field name="report_styles">UEsDBBQAAAgAACAPU0RexjIMJwAAACcAAAAIAAAAbWltZXR5cGVhcHBsaWNhdGlvbi92bmQub2Fz
aXMub3BlbmRvY3VtZW50LnRleHRQSwMEFAAACAAAIA9TRLRS/rwoBQAAKAUAABgAAABUaHVtYm5h
aWxzL3RodW1ibmFpbC5wbmeJUE5HDQoaCgAAAA1JSERSAAABAAAAALUIAgAAAD9gtkMAAATvSURB
VHic7ds/SFVtAMfxG9kgWVbkZARKS5sgtAc569pQ0lJDDtUcRINbS1BDQxDR0KbNNjq4JxgtQeAU
gWFQYNH74KHDwfTV7P4Jf5/PcLn33PvcjvB8731O59y+nz9/tiBVX693AHpJAEQTQFf9+PHj8OHD
WzbevXv31q1bb968uXjx4l5eTxsJoHtmZmbevXv39u3bDx8+lIeHDh0qB2BPnjyZ3VQdjFUbp6am
Xr16tb6+PjExMT4+/ujRo17v+4ElgO4p87j5iV7N+Bub6tdUG+fn56uHi4uLvgE6SgBd9aez2ezv
NAH8E96/fz8yMtLc8vHjx6GhoV7tTw4BdNvq6urw8HBZ67c2Fzxllb+wsDA6Olrunz9/fmVlpbV5
JHDq1KlPnz71emcPPgF0W5n9rV9r/aLM/nL75cuXclvN/uazdJoA/glHjx7t9S6EEgDRBNBmu57q
+vr1a39//06v33V4uT87O1sWTpcuXercX5FDAO3UPNVVndJ6/fr1yMhIfaqrbBwcHBwYGCiHwmtr
a2Xpf+bMmZs3b1anusrwx48ff/78+fjx4/Xw27dv37lzZ2hoqBpe/UMPHjyYn593guzvCaCdmqe6
qgPZ6nO6PqjdcnRbYvj+/Xv9kV+GP3z4cMvw8sFf7ly7dq053CUS7SKANvvLU117HG72t4sA/srz
58+vXr3a+nUNT2vnz+YtV7zVr98yZH19fXp6+tmzZ2UV9Puz277b6Ojo2NjY06dPT5482Zm/8iAT
wP5VK/IyX+upvO3lbtU6fnl5+ezZs9evX29O/XK/uuJtaWlpY2PjyJEjk5OTp0+frmZ/ebYcHuzl
qODChQuXL18+d+6co4I/JYD9ay7oq/vbXu5Wr+ObG5u3i4uLfX193759Kw9LD1euXCm3x44dq57d
9aigGvLy5csTJ0505w8/SATQZvtYnZchdUtl3s/NzdX/27OXN/x9CHsngO6pr/9p/fkvY5oLp53e
mX0QQGfVk35qaqq5saz7//90wdraWlnSVANfvHjR2jzAsMRvOwF0Vv2xXf/Gpdq4l9MFzR/HNE8X
0EYC6A2/jPlH7B7A/fv3u7Af0FH37t3bdrtvAKLtHsBO6cAB4BuAaAIgmgCIJgCiCYBoAiCaAIgm
AKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmA
aAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgC
IJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCa
AIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCI
JgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYA
ogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
gGgCINp/5wzaU0qv3cYAAAAASUVORK5CYIJQSwMEFAAICAgAIA9TRAAAAAAAAAAAAAAAAAsAAABj
b250ZW50LnhtbM1XUY/jJhB+76+wXKlvLJuklW7dTU5qT6dW2pWq7rbq24nF2OGKwQUcJ/31HSBm
cTbOWZeXvjgx8w3z8TEz4Pv3+0ZkO6YNV3KdL25u84xJqkou63X+x/NH9C5/v/nmXlUVp6woFe0a
Ji2iSlr4zcBbmiJY13mnZaGI4aaQpGGmsLRQLZODV5GiCx8rjBh7ELPdPTj1tmxv5zo77MiXvMyP
7MGpd6lJP9fZYUHU1L1Sc533RqBKgepNSyw/YbEXXP69zrfWtgXGfd/f9KsbpWu8uLu7w94aCdOI
azstPKqkmAnmghm8uFngAdswS+byc9iUkuyaF6ZnS0MsebOrZlfPzohdPSEN3RI9Ozc8eLy9q3L+
9q7K1LchdjuxJ+/wIxj94/HhNRd0MzeWw46kopq3s5cZ0Km/UipSdQ6hQD3d5e3t9zi8J+j+IrzX
3DKdwOlFOCWCRsVVc040wC0wIBDbuTSNie+EMBMOSxzMEWzKyan/enx4olvWkFcw/zIYcWkska/K
aLcJkyv9AWvWKm2jMNX8hgm7tYzctrYR0+XurAO01mV5Fgp0VhhKHwoP7Tjrvx31w8v5cIc9KCYu
Z2Kokog9LoftW6a5WwkRLhFQY0A0SA7VFon3uCfqZj9vOpcQqqxOZzwpDmrMyp7T4Pl37GzIHQnQ
9I6RkqNwmW+Gcy/UjMFxoILzD1WEMlQyKszmPvSvOJyFd8d7nX/UjD0RaRZ5Bq1qADVcHF5teTaa
wRlRzSSsF6rH9NyYHF+O8sCh5UILVDJ7ArfqTLDvSKvMj6fAMHqRgFYNkSNEyy2FBrcjmvts+AK5
D+wz+bPLjis9zyvBnKFESqWlP6XW+U9KlDMEu4JvqtElzie4GVJeTS2R6VxCzdHyDaeDsay5hlSS
xl+X4bMY4KnqO46TzkKiWk6RnyeWpX+O+P62iLGONFuiSa1Jux0MMOBuuv4FBa9nR+TT8vbTz+H6
a/IhQvRGLbQipi1nJquUv28iIngNHYUy6c/F4PG5M5ZXB2TgUggBeqWhi1ZEmERr7z2e0C+9Z7ze
QlOT0OuIGKkWTAjOFCIvAdx9SbB9hDh1E7EuKLf8GuV+UZr/q1zjdvI9cMny/8Mi8WTiHA0vqjzE
F8d0c+8/IQz7p4PvpJiAbwczP1Ry0wpyQKqzcA9nSMANBk5kOJ28OYjzqxCQDKGNOI5XTfY8FMt1
s8Dfqyf5ED55vOzTqrXBJc2WJ7hWlUSXac0H8fFoX/DEZ+nmP1BLBwgfYiGOqwMAANcOAABQSwME
FAAICAgAIA9TRAAAAAAAAAAAAAAAAAoAAABzdHlsZXMueG1s3Vvdbts4Fr7fpzA02F4sINty4jh2
mw5mO1tsgbazaLt7O2AkytZUEgWKiuM+zd7ua+y82JzDH4mSKEdOmmKaFkhinkPy8Du/OqJf/Hib
pZMbysuE5VdeMJ17E5qHLEry7ZX370+v/Uvvx5d/ecHiOAnpJmJhldFc+KU4pLScwOS83CjilVfx
fMNImZSbnGS03Ihwwwqam0kbm3sjt1IjcrGx0yWzPVvQWzF2MvK25pLr8TtLZnt2xMl+7GTkBUzt
6TEbO/m2TP2Y+SHLCiKSjhS3aZJ/vvJ2QhSb2Wy/30/3Z1PGt7NgvV7PJLUWOKz5ioqnkisKZzSl
uFk5C6bBzPBmVJCx8iGvLVJeZdeUj4aGCNLTanmzHW0RN9sBaMId4aNtQzK31XsWjVfvWWTPzYjY
DejkcvYOiPLHu7eNLfBs7F7I24Iq5Ekx+piK257PGKtFxQnKQaW4i/n8fKY+W9z7o+x7ngjKLfbw
KHtI0rBGnGUu0IAvmAGHT2/QTA03x0MPrryccVowLmpB4vEBCtBZ1O61E1k67F5INaxbHkVOVhDn
bAauBobu3yR0/0Mr/hzHfz2TTLVJl+WZcO3x6cMMaT6GOHBiHWWtyL7wXpowHjMI4TEJqR/RMC1f
vlDuVw9P1GcE6cp7zSn9SPIy8CbgaYYpS9JDQ/MmrRWQ6G9pTnkCyi/3SVl6s+O7vE0gYoAHs3zy
EabFjs2ekYKVz7uMavSoAJxlJG9xFIkIwT9vCE8kuHcI9zP9jfynmuiTuuWyeBwikYjxXAbZK+/v
LI1GAPYAeW2Mjsnc4RsB5YNFs2ByGdQYLHsyHUpBs4cIZZnx/Sx8lASzIe/T46qmMpJGNCZVqist
s7IWastJsUtCz/Dqz37BIX5wkUBlhgcpBWefKeTGlEEy/uFyjv+9CZYimzhJ05oSxnQVL71JzDZ7
WMpnhZBBI2c+ftZTyh1Y8d4HaUsq/Nsrbz49CzMn8dAhCkitPlQi1C8LEkId5O8YT74AECRF1sXl
UeYbPFTYZ4XQPXbVHqtjTQ1yCufYJ2Lnq8oyJmlpWVBBOJF4t9CWJOT3SSUY7gFmlUSUKVaSFjti
NpBiXHNKoGoDFSWhMBRMnShbxiKYnnJfXLeMKskjivkKK3D7MEZIIyNkDLAbVpRodcNi1+wod+80
VUkBhhy1KjfXxiJ4RaWlyMEy+QKSBotCyLGU5NuKbGEo5nIgZFUuOPrRh/r4VEB94H+mPJeiqwWt
U+KaPmRpgmlrPl0WNT5meUP9sjMUvY8hvHrfXxFLxJTeGmk7K9bUXdJdsya9ee81gLb8c4zT1hrw
jpoSgLY7FDuay7jspySKAC0pi3TINMmSWvyRFldUeSgqtSA6NJwSzg3o322SxpT8KAHHzHETKCWW
QeMvbaMtAMzGWe5hWZbahiqDxzQ+3NNYUSdXPaaFym1rQ3Mmna9nxLaNURM7uobHaUaS3MenImN9
ix5TUZW7DssDPEQVulYQS6ltPOr5+5pxdAi0NojdYDopKUo05Ydu7HO272wOIx3X/Exp4Qu2pWKH
D7joendtbG+oLPojOFJEeFME9iKEUV5KSigY0Ysan+qv909KIsuZB5eDgbp347tFydFhbYZPMPDr
Yv7rNYsOLrHuimUZ4RBoALICE+35QibaZvyaCYEPfZCDg4UmSYxlAs5lAibpnhzKu4LKQMSQXtQJ
GOeN69zT550rnOS+uEJjOHcYjEsJEI+LlBwsNU1s8kOM4N76Pa7b0cd9C6nmPuc4YqspLjnCgFpa
XozScjD+YK+ILKy/oo7gJJyc6ISNpw05oWyTqiaerDPLOklIiqwWTI9vPuyYA3lajeEMKFigVIcH
mdEqUJBoqmPykIrGJVJri5quNxmt4zdQnt9+RQ0ncr2jGv5K6vpmboD5CjuE39ILTsOo9yDVHTAi
sjJRj8pBMF2vmqJYHAoQNwT54aCzO2cvzqbr8+5snmx3dpKwhDn6UDcyp2CFg9HyFehUtVWdiQXZ
Jl2eP6POxtcHrXZeO0it7Bi1p6gBfOriGUnvegIYb/51kwLhfwuncEPf8E1spm9V3snO9ldJ/+fr
dWPbun6XytsnEVR5DeN8DulnAr/Plur33GSqAh6D5QOb2cQsQ2OpoJzao9zorT0spewOWrtfFGIS
sQoNvm6WnWaD+oy/MXl+XL/XPzqeJC+6yciyMyetjsMXLhOUMrJKqGZRzxJ/URSvw5jSG5pqdnVK
HABDr82oynx8C0UA5NpEsMTSU7s+bJN0zPPBMGX7ippuF7kGMuTareyTu5btsOi15WAMz4FsTyP/
+qCKPQiWnrV53cZoYu58urow5iWVksjG2pXn2xRtzMrODKHB2XlooA7hORLpxZNCOpjOgwsn0jal
hbQhPDrSZ08M6cVqAOia0MFZjj86zOdPDObl4nwA54bSAVoRHh3p5RNDerW6HEC6oXSQVoRHR/ri
SSG9gKrLnQ5tSgtpQ3h0pFdPDOnFpTsd2pQO0orw6EhfPjGkl+4wbRE6OC+/SZBePzGYV+shnBtK
B2hFeHSkg/mTgvpsOj9350Ob0oLaEB4CdZtk458zQUt4Cs3jZFvply41wdethJgxgZ9dqgj0idW1
jxuSVlQ+SctBM7G0IJBvmO056vEbX0HjeuYyH553vIQ0j4YETNwCmuURkUYC1zaDzQN1WabXIXGh
oxdpUEDdalqSh1xe4MXiz7pnJFdrrhfhu0pYMwl9QzjaGgy6/aY73s6qYdnRAfdeTS+k36t3ttL6
rzxlluUJ772kINOfnKLgtYEqyzsSqcG+YHq8K58icpr6bYaL5fJs+bfTJXWj5oc0TbuCwlCnD9Q0
uabztXlcM20k2bcaLc+7f/UkGfUGrdcUvqsBqG6gKP3qdrdpglWlSOKDjy/nYYM9nGN0M+xI51WR
TE9smKFujGmWE6Bb3Ac6R1f3z3NKjJmQiQ4QwdtnLbLAczD1DHNLa9dZT41pyuGdPsQimM7nwWAU
01tAkBQ+IAXoER3IIKeWISmonbnMm8rVeqinfHm5dj/8BZ0kqHvBOKMRTt1WtJvBJPy85ayC/F7f
RiJ5qfQ86nqeSlR+Rm5rSLBXbcC1NkgywM26kapnlrRoB1GIAoEls7mA5V9TwFXyI09gg17zkBiv
OblYmgx+5ZUsTep3AyRCj1V5RGWXJjga3S//2twrUldH5/KfZXduKzKn3clXf+0LMnoMgcAU136/
ABo0cA42C+dujQ+ZznJuo3oAT8Cc2L5J2ZzHJbEWVX5wnrxJwv2sqwkZKes1anj0IK509MaQDbLD
k5XMUKDI7Ct/6kzcTvBqrJcAcCFrqk6Ng9yQn2ftCZztOytAsjsyP2i+r4Dlla/ef+JFxHxrXk4U
pgprpmOS01RdCxeVLrAjqr7nIkPMs1Q8l18Qyg9TnPlsK557L12jutBtVjOlb4F/dA7UGeod+lui
8DOfvP7w0/tXv7z5+J1IfKLeYFFKRV9zzXhfd5MT9wgTcejvYEa/W9v49Pv/0v//d3MqGsUOkmMf
jnq4j8ds8prc3mOnmNz299GD3y3q/8hIgrCfiAXeuk37aNTDx/AYlkddyx0Dlz0yvKK+wdPNkvVH
K481qbCT8Wbu7xS//ANQSwcIIS1ScpoKAACTPAAAUEsDBBQACAgIACAPU0QAAAAAAAAAAAAAAAAM
AAAAc2V0dGluZ3MueG1stVpNc+I4EL3vr0j5TghMwiZUwhSQYYYJCRSQSe3chN2AFlntkuQA/35b
NmSzgLMEW6dU/NGtbr1+/Vrm9usqFGevoDRHeedVzi+8M5A+BlzO7rzncad07X1t/HGL0yn3oR6g
H4cgTUmDMfSIPqPXpa6nt++8WMk6Ms11XbIQdN34dYxAbl+rv3+6njhLr6wEl4s7b25MVC+Xl8vl
+fLLOapZuXJzc1NO7m4f9VFO+exYV+nT710h4psj+0K6mMRZ9eLispz+751tFvkuNVWvsc3DNvzG
7cZB+qfEDYQ2N2eby3Zpdx65rL9yWL5lzTv03n/f+UXPNxWwMUbe9o5ZR3RHoJx5jYvb8r6J4832
YGoO2q3ULvNZfuGBmR80Xb2qVK7zGf8BfDbPWPjVTeXP06yP5rgcQkAog/acyRnoHQ8TRAFMeg2j
YjjNR1e2FC41PGIAWdanTOijzZdCFpW4DGAFwX6yDkMseYeKQ62PS3k32FmqNorbZFs0V0/fykz0
VSvXOcxm1crVZe3qVKuaTwS4qJbEcOHVnVgdZhZJ9ap6nc92C43BMLMCa6cZ/40YjsnULtzmqEwu
ruuxNcamjSIO5W5VF2W9hbgorKz389JhvkF1eO2VLyeuvqtHIMA3EHQUXThh6QcuvqeXrNsbxjr8
APXH4ztqeiFWzFB//kxrHRCHESRonSgcMH1iviWYv+iQj0wHOVCReGhKiSaJ/QD28kE7sT9gM2hR
EDOFsdztA0WlaQwrM6BUwRxFALsgLyxXP3gQgLTOXHn4FkZmbVPmClADhTqignUVQNIznAbAIlAd
heEITLzb9QoLA9RB80xD7bLFJVNrr3wEO84kKuhwpU2PRGGXOEuarnyKwwkkAqj41VOLEizSkACp
DUIMmGLFb8WzXHVQ+fAbFH5bmR6wwE08YzZpGqub0uSRUxvQTLForruyx7UzJG8rZTjuudinWCmK
554ZZlHVxjBke/S4kclHII0Wa2itlJ5dTVVcZYOdYSGTwvNtMqlNXD4AuKho6tGaU1uwxP1CyOnL
/uTvAbpoqRSJHoKgfvpKojzFbPHVd49PaNosMrGCe8WWFI7uS8u6DkLqIQuGVN8oxdqB+c3AvAEw
yZAH2HPzSdp91tAXwYbHH4GKyHex1ym72x1vyoCEmlxoqj9L9G0m/FgkosoNxvpUilOBS0fQGgLJ
YMuzTWOUDYo6lhWhDoJ5lhMFbGEJ4K0tutgswoQlx39JIHLTr5pBYBM3iphPDsaYUJvtw670ECjL
MvbEkqgmHSQzDlvmJM1KCjQNsRaZJ8YnCHaJ4584aTPpgyg+sLbgUVO355RIGi1VU/o0h0DwouhR
1RHrZNZ0hBJiDpf67DkKmAGrX8cQRsQRmZR9evoIg0mG+tMp1bET6pNEQKaFirrqBuoua5b6G/UG
6tjcAtexM0vg7mLa0X327whj5e9N3kdLvxF7he8CJ0zcb75ZUAQLF7vej41t1T0SguIvDiLQLivF
xvUr/WrSl22B2oW4OSzDDxwhEuGdfA7yRmRkPiICtiEVfko5CpkQpAn1AAhN0pAYrNVczQIj2nIB
1AFcwIzoi0ZKUJKJ/5krc3xG0Q/koKk5k4NY+iZ2JdaSdH234+oHIvT0ODq2DJuxwbSvuEhUj03g
jVpcZchO+I5OjZqCzyTJsJHBaNtCHOnmn7E2fLq2HUS/cDN/ZDJmomUFrruDqqf9c/fPnBvY01Or
UR1k3vKecQnOjdhO1r9p2U0zMuTVkdi2w/ZHA0pO8x22yrWbB/JR/EofmZm3qFdaKZDU1ke8kGNv
o0isSZQp25uLN281UgrL7M8eleO/WCVfnMp7v+ooZ/3epfEPUEsHCJEuef5tBQAAMSMAAFBLAwQU
AAAIAAAgD1NE3/XSnuIDAADiAwAACAAAAG1ldGEueG1sPD94bWwgdmVyc2lvbj0iMS4wIiBlbmNv
ZGluZz0iVVRGLTgiPz4KPG9mZmljZTpkb2N1bWVudC1tZXRhIHhtbG5zOm9mZmljZT0idXJuOm9h
c2lzOm5hbWVzOnRjOm9wZW5kb2N1bWVudDp4bWxuczpvZmZpY2U6MS4wIiB4bWxuczp4bGluaz0i
aHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgeG1sbnM6ZGM9Imh0dHA6Ly9wdXJsLm9yZy9k
Yy9lbGVtZW50cy8xLjEvIiB4bWxuczptZXRhPSJ1cm46b2FzaXM6bmFtZXM6dGM6b3BlbmRvY3Vt
ZW50OnhtbG5zOm1ldGE6MS4wIiB4bWxuczpvb289Imh0dHA6Ly9vcGVub2ZmaWNlLm9yZy8yMDA0
L29mZmljZSIgeG1sbnM6Z3JkZGw9Imh0dHA6Ly93d3cudzMub3JnLzIwMDMvZy9kYXRhLXZpZXcj
IiBvZmZpY2U6dmVyc2lvbj0iMS4yIj48b2ZmaWNlOm1ldGE+PG1ldGE6Y3JlYXRpb24tZGF0ZT4y
MDEzLTA0LTA1VDIxOjUxOjMyPC9tZXRhOmNyZWF0aW9uLWRhdGU+PGRjOmRhdGU+MjAxNC0wMi0x
OVQxMjo1NzowMTwvZGM6ZGF0ZT48bWV0YTplZGl0aW5nLWR1cmF0aW9uPlBUNEg0TTU4UzwvbWV0
YTplZGl0aW5nLWR1cmF0aW9uPjxtZXRhOmVkaXRpbmctY3ljbGVzPjIzPC9tZXRhOmVkaXRpbmct
Y3ljbGVzPjxtZXRhOmdlbmVyYXRvcj5MaWJyZU9mZmljZS8zLjUkTGludXhfWDg2XzY0IExpYnJl
T2ZmaWNlX3Byb2plY3QvMzUwbTEkQnVpbGQtMjwvbWV0YTpnZW5lcmF0b3I+PGRjOmNyZWF0b3I+
TC4gRlJBTkNPSVM8L2RjOmNyZWF0b3I+PG1ldGE6ZG9jdW1lbnQtc3RhdGlzdGljIG1ldGE6dGFi
bGUtY291bnQ9IjEiIG1ldGE6aW1hZ2UtY291bnQ9IjAiIG1ldGE6b2JqZWN0LWNvdW50PSIwIiBt
ZXRhOnBhZ2UtY291bnQ9IjEiIG1ldGE6cGFyYWdyYXBoLWNvdW50PSI1IiBtZXRhOndvcmQtY291
bnQ9IjEzIiBtZXRhOmNoYXJhY3Rlci1jb3VudD0iMTIwIiBtZXRhOm5vbi13aGl0ZXNwYWNlLWNo
YXJhY3Rlci1jb3VudD0iMTEyIi8+PC9vZmZpY2U6bWV0YT48L29mZmljZTpkb2N1bWVudC1tZXRh
PlBLAwQUAAgICAAgD1NEAAAAAAAAAAAAAAAADAAAAG1hbmlmZXN0LnJkZs2TzW6DMBCE7zyFZc7Y
QC8FBXIoyrlqn8A1hlgFL/KaEt6+jpNWUaSq6p/U465GM9+OtJvtYRzIi7KowVQ0Yyklykhotekr
OrsuuaXbOtrYtisfmh3xaoOlnyq6d24qOV+WhS03DGzPs6IoeJrzPE+8IsHVOHFIDMa0jggJHo1C
afXkfBo5zuIJZldRdOugkHn3ID2L3TqpoLIKYbZSvYe2IJGBQI0JTMqEdIMcuk5LxTOW81E5waHt
4sdgvdODojxg8CuOz9jeiAym5V7gvbDuXIPffJVoeu5jenXTxfHfI5RgnDLuT+q7O3n/5/4uz/8Z
4q+0dkRsQM6jZ/qQ57TyH1VHr1BLBwi092jSBQEAAIMDAABQSwMEFAAACAAAIA9TRAAAAAAAAAAA
AAAAABgAAABDb25maWd1cmF0aW9uczIvbWVudWJhci9QSwMEFAAACAAAIA9TRAAAAAAAAAAAAAAA
ABgAAABDb25maWd1cmF0aW9uczIvZmxvYXRlci9QSwMEFAAACAAAIA9TRAAAAAAAAAAAAAAAABgA
AABDb25maWd1cmF0aW9uczIvdG9vbGJhci9QSwMEFAAACAAAIA9TRAAAAAAAAAAAAAAAABwAAABD
b25maWd1cmF0aW9uczIvcHJvZ3Jlc3NiYXIvUEsDBBQAAAgAACAPU0QAAAAAAAAAAAAAAAAaAAAA
Q29uZmlndXJhdGlvbnMyL3Rvb2xwYW5lbC9QSwMEFAAACAAAIA9TRAAAAAAAAAAAAAAAABoAAABD
b25maWd1cmF0aW9uczIvcG9wdXBtZW51L1BLAwQUAAAIAAAgD1NEAAAAAAAAAAAAAAAAHwAAAENv
bmZpZ3VyYXRpb25zMi9pbWFnZXMvQml0bWFwcy9QSwMEFAAACAAAIA9TRAAAAAAAAAAAAAAAABoA
AABDb25maWd1cmF0aW9uczIvc3RhdHVzYmFyL1BLAwQUAAgICAAgD1NEAAAAAAAAAAAAAAAAJwAA
AENvbmZpZ3VyYXRpb25zMi9hY2NlbGVyYXRvci9jdXJyZW50LnhtbAMAUEsHCAAAAAACAAAAAAAA
AFBLAwQUAAgICAAgD1NEAAAAAAAAAAAAAAAAFQAAAE1FVEEtSU5GL21hbmlmZXN0LnhtbK1Uy27D
IBC85yssrpWhzalCcXKo1C9IP4DitYMEC4Iliv++OGoeVeUqVn3bx+zMCBY2u5Oz1RFiMh4b9sKf
WQWofWuwb9jH/r1+ZbvtauMUmg4SyUtQlTlM17RhOaL0KpkkUTlIkrT0AbD1OjtAkj/x8qx0ze4M
rNl2Vd30OmOhLvNxuKG7bG0dFB0aJqZIbmUHrVE1DQEapkKwRisqMHHElp8N83ufnOBETMzxsD9k
94nK2CToEvKA/YQH41QPYuzPUtEeafRXznGCeHQuxvYs3kSDhbQ8LRCVHVqe2AGp5Um/azy23QOr
U1BPszXePHamz/FMkdZCaQ0WSuqj0DnGvy/3f1oPPoeUcbTAs+H6nmEU34hff8D2C1BLBwiLXKdK
GgEAAD4EAABQSwECFAAUAAAIAAAgD1NEXsYyDCcAAAAnAAAACAAAAAAAAAAAAAAAAAAAAAAAbWlt
ZXR5cGVQSwECFAAUAAAIAAAgD1NEtFL+vCgFAAAoBQAAGAAAAAAAAAAAAAAAAABNAAAAVGh1bWJu
YWlscy90aHVtYm5haWwucG5nUEsBAhQAFAAICAgAIA9TRB9iIY6rAwAA1w4AAAsAAAAAAAAAAAAA
AAAAqwUAAGNvbnRlbnQueG1sUEsBAhQAFAAICAgAIA9TRCEtUnKaCgAAkzwAAAoAAAAAAAAAAAAA
AAAAjwkAAHN0eWxlcy54bWxQSwECFAAUAAgICAAgD1NEkS55/m0FAAAxIwAADAAAAAAAAAAAAAAA
AABhFAAAc2V0dGluZ3MueG1sUEsBAhQAFAAACAAAIA9TRN/10p7iAwAA4gMAAAgAAAAAAAAAAAAA
AAAACBoAAG1ldGEueG1sUEsBAhQAFAAICAgAIA9TRLT3aNIFAQAAgwMAAAwAAAAAAAAAAAAAAAAA
EB4AAG1hbmlmZXN0LnJkZlBLAQIUABQAAAgAACAPU0QAAAAAAAAAAAAAAAAYAAAAAAAAAAAAAAAA
AE8fAABDb25maWd1cmF0aW9uczIvbWVudWJhci9QSwECFAAUAAAIAAAgD1NEAAAAAAAAAAAAAAAA
GAAAAAAAAAAAAAAAAACFHwAAQ29uZmlndXJhdGlvbnMyL2Zsb2F0ZXIvUEsBAhQAFAAACAAAIA9T
RAAAAAAAAAAAAAAAABgAAAAAAAAAAAAAAAAAux8AAENvbmZpZ3VyYXRpb25zMi90b29sYmFyL1BL
AQIUABQAAAgAACAPU0QAAAAAAAAAAAAAAAAcAAAAAAAAAAAAAAAAAPEfAABDb25maWd1cmF0aW9u
czIvcHJvZ3Jlc3NiYXIvUEsBAhQAFAAACAAAIA9TRAAAAAAAAAAAAAAAABoAAAAAAAAAAAAAAAAA
KyAAAENvbmZpZ3VyYXRpb25zMi90b29scGFuZWwvUEsBAhQAFAAACAAAIA9TRAAAAAAAAAAAAAAA
ABoAAAAAAAAAAAAAAAAAYyAAAENvbmZpZ3VyYXRpb25zMi9wb3B1cG1lbnUvUEsBAhQAFAAACAAA
IA9TRAAAAAAAAAAAAAAAAB8AAAAAAAAAAAAAAAAAmyAAAENvbmZpZ3VyYXRpb25zMi9pbWFnZXMv
Qml0bWFwcy9QSwECFAAUAAAIAAAgD1NEAAAAAAAAAAAAAAAAGgAAAAAAAAAAAAAAAADYIAAAQ29u
ZmlndXJhdGlvbnMyL3N0YXR1c2Jhci9QSwECFAAUAAgICAAgD1NEAAAAAAIAAAAAAAAAJwAAAAAA
AAAAAAAAAAAQIQAAQ29uZmlndXJhdGlvbnMyL2FjY2VsZXJhdG9yL2N1cnJlbnQueG1sUEsBAhQA
FAAICAgAIA9TRItcp0oaAQAAPgQAABUAAAAAAAAAAAAAAAAAZyEAAE1FVEEtSU5GL21hbmlmZXN0
LnhtbFBLBQYAAAAAEQARAHAEAADEIgAAAAA=
</field>
</record>
            
        <!-- THE ONE IN CRM MEETING -->
        <!-- 1 CR FULL CONSULTATION -->
        <record model="ir.actions.report.xml" id="cr_consultation_id">
            <field name="name">CR consultation</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">CR.Consultation</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/CR_Full_Consultation.odt</field>
            <field name="parser_state">default</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
        </record>
        <!-- button -->
        <!-- report_name above si name in button -->
        <record model="ir.values" id="value_cr_consultation_id">
            <field name="name">CR.Consultation</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.cr_consultation_id'))"/>
        </record>
        
        <!-- 2 PRESCRIPTION REPORT -->
        <record model="ir.actions.report.xml" id="prescription_report_id">
            <field name="name">Prescription Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Prescription.Report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Prescription_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Prescription'+'_'+object.partner_id.fullname+'_'+object.date</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_prescription_report_id">
            <field name="name">Prescription.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.prescription_report_id'))"/>
        </record>
        
        <!-- 3 MEDICATION REPORT -->
        <record model="ir.actions.report.xml" id="medication_report_id">
            <field name="name">Medication Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Medication.Report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Medication_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Medication'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_medication_report_id">
            <field name="name">Medication.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.medication_report_id'))"/>
        </record>
        
         <!-- 4 ATENDENCE CERTIFICATE -->
        <record model="ir.actions.report.xml" id="certif_presence_id">
            <field name="name">Certificat Presence</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Certificat.Presence</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Certificat_Presence.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Certificat presence'+'_'+object.partner_id.fullname+'_'+object.date</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_certif_presence_id">
            <field name="name">Certificat.Presence</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.certif_presence_id'))"/>
        </record>
        
        <!-- 5 DILATATION CERTIFICATE -->
        <record model="ir.actions.report.xml" id="certif_dil_id">
            <field name="name">Certificat Dilatation</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Certificat Dilatation</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Certificat_Dilatation.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Certificat dilatation'+'_'+object.partner_id.fullname+'_'+object.date</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_certif_dil_id">
            <field name="name">Certificat Presence</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.certif_dil_id'))"/>
        </record>
        
        <!-- 6 MEMO RDV -->
        <record model="ir.actions.report.xml" id="memo_rdv_id">
            <field name="name">Memo de rendez vous</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Memo RDV</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Memo_RDV.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_memo_rdv_id">
            <field name="name">Memo RDV</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.memo_rdv_id'))"/>
        </record>
        
        <!-- 7 MEMO RDV PLUS-->
        <record model="ir.actions.report.xml" id="memo_rdv_plus_id">
            <field name="name">Memo de rendez vous Plus</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">Memo RDV Plus</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Memo_RDV_Plus.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_memo_rdv_plus_id">
            <field name="name">Memo RDV Plus</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">crm.meeting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.memo_rdv_plus_id'))"/>
        </record>
        <!-- END OF PRINT IN CRM_MEETING -->
        
        <!--MODELE FOR FORMULA PRESCRIPTION REPORT-->
        <!--  1- modele Single vision -->
        <record model="ir.actions.report.xml" id="report_sv_id">
            <field name="name">Single Vision</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">single.vision.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Single_Vision.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <!-- choix du format d'edition/impression -->
            <field name="attachment">'Single'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  2- modele Single Vision and Sunglasses-->
        <record model="ir.actions.report.xml" id="report_svsg_id">
            <field name="name">Single Vision Sun Glasses</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">single.vision.sunglasses.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Single_Vision_Sunglasses.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <!-- choix du format d'edition/impression -->
            <field name="attachment">'Single'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  3- modele Multifocal -->
        <record model="ir.actions.report.xml" id="report_multifocal_id">
            <field name="name">Multifocal</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">multifocal.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Multifocal.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <!-- choix du format d'edition/impression -->
            <field name="attachment">'Multifocal'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  4- modele Multifocal and Sunglasses-->
        <record model="ir.actions.report.xml" id="report_multifocal_sunglasses_id">
            <field name="name">Multifocal and Sunglasses</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">multifocal.sunglasses.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Multifocal_Sunglasses.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <!-- choix du format d'edition/impression -->
            <field name="attachment">'Multifocal'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  5- modele Bifocal -->
        <record model="ir.actions.report.xml" id="report_bi_id">
            <field name="name">Bifocal</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">bifocal.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Bifocal.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <!-- choix du format d'edition/impression -->
            <field name="attachment">'Bifocal'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  6- modele Bifocal Sunglasses -->
        <record model="ir.actions.report.xml" id="report_bisun_id">
            <field name="name">Bifocal Sunglasses</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">bifocal.sunglasses.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Bifocal_Sunglasses.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Bifocal'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!--  6 - modele Reading glasses -->
        <record model="ir.actions.report.xml" id="report_mf_id">
            <field name="name">Reading Glasses</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">crm.meeting</field>
            <field name="report_name">reading.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_meeting/Report_Reading.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Reading'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- END OF MODELS FOR FORMULA PRESCRIPTION -->

        <!-- THE ONE IN OPH.REPORTING -->
        <!-- object oph.reporting -->
        <!-- 1 GENERAL REPORT -->
        <record model="ir.actions.report.xml" id="general_report_id">
            <field name="name">General Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">general.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/General_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_gen_report_id">
            <field name="name">General.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.general_report_id'))"/>
        </record>
        
        <!-- 2 OR REPORT -->
        <record model="ir.actions.report.xml" id="or_report_id">
            <field name="name">Operating Room Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">OR.Report</field>
            <!-- report_name must be the name of the "name" of the report -->
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/OR_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
            <field name="attachment">'OR_Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
            
        </record>
        <!-- button -->
        <record model="ir.values" id="value_or_report_id">
            <field name="name">OR.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.or_report_id'))"/>
        </record>

        <!-- 3 PKE ICP REPORT -->
        <record model="ir.actions.report.xml" id="pke_icp_report_id">
            <field name="name">PKE ICP Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">PKE.ICP.Report</field>
            <!-- report_name must be the name of the "name" of the report -->
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/PKE_ICP_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
            <field name="attachment">'PKE_ICP_REPORT'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_pke_icp_report_id">
            <field name="name">PKE.ICP.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.pke_icp_report_id'))"/>
        </record>

        <!-- 4 PLAIN REPORT -->
        <record model="ir.actions.report.xml" id="plain_report_id">
            <field name="name">Plain Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">plain.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/Plain_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier1_id"/>
            <field name="attachment">'Plain Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_plain_report_id">
            <field name="name">Plain.Report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.plain_report_id'))"/>
        </record>


        <!-- 5 DIABETIC REPORTING -->
        <record model="ir.actions.report.xml" id="diab_report_id">
            <field name="name">Diabetic Reporting</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">diabetic.reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/Diabetic_Reporting.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
            <field name="attachment">'Diabetic Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
            
        </record>
        <!-- button -->
        <record model="ir.values" id="value_diab_report_id">
            <field name="name">diabetic.reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.diab_report_id'))"/>
        </record>

        

        <!-- 7 USING TEMPLATE  REPORT -->
        <record model="ir.actions.report.xml" id="using_template_report_id">
            <field name="name">Using Template Reporting</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">using.template.reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/Using_Template_Reporting.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier_id"/>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_using_template_report_id">
            <field name="name">using.template.reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.using_template_report_id'))"/>
        </record>
        
        <!-- 8 OCT REPORT -->
        <record model="ir.actions.report.xml" id="oct_report_id">
            <field name="name">OCT Reporting</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">oct.reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/OCT_Reporting.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier1_id"/>
            <field name="attachment">'OCT_Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_oct_report_id">
            <field name="name">oct.reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.oct_report_id'))"/>
        </record>
        
        <!-- 9 CAPS REPORTING -->
        <record model="ir.actions.report.xml" id="caps_report_id">
            <field name="name">Capsulotomy Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">Capsulotomy.Reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/Laser_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier1_id"/>
            <field name="attachment">'Capsulotomy_Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_caps_report_id">
            <field name="name">Capsulotomy.Reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.caps_report_id'))"/>
        </record>

        <!-- 10 COPY PATIENT -->
        <record model="ir.actions.report.xml" id="copy_report_id">
            <field name="name">Copy Patient Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">Copy.Patient.Reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/Copy_Patient.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier1_id"/>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_copy_report_id">
            <field name="name">Copy.Patient.Reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.copy_report_id'))"/>
        </record>
        
        <!-- 11 FA REPORT -->
        <record model="ir.actions.report.xml" id="fa_report_id">
            <field name="name">Fluoresceine Angiography Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.reporting</field>
            <field name="report_name">FA.Reporting</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_reporting/FA_Report.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_courrier1_id"/>
            <field name="attachment">'AF_Report'+'_'+object.partner_id.fullname+'_'+object.date+'.odt'</field>
        </record>
        <record model="ir.values" id="value_fa_report_id">
            <field name="name">FA.Reporting</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.reporting</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.fa_report_id'))"/>
        </record>
        <!-- END OF PRINT IN OPH_REPORTING -->
        
        <!-- REQUEST REPORT -->
        <record model="ir.actions.report.xml" id="request_report_id">
            <field name="name">Request Report</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.request</field>
            <field name="report_name">request.report</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_request/Request.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_ordo_id"/>
            <field name="attachment">'Request'+'_'+object.partner_id.fullname+'_'+object.date_request+'.odt'</field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_request_report_id">
            <field name="name">request.report</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">oph.request</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.request_report_id'))"/>
        </record>
        

        
        
        <!-- FEUILLE DE SOINS -->
        <!-- FDS 1 -->
        <record model="ir.actions.report.xml" id="fds_account_id">
            <field name="name">FDS CAFAT MUT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">fds1</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/account_invoice/FDS.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_fds_account_id">
            <field name="name">fds1</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">account.invoice</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.fds_account_id'))"/>
        </record>
        <!-- FDS 2 -->
        <record model="ir.actions.report.xml" id="fds_order_id">
            <field name="name">FDS CAFAT MUT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">sale.order</field>
            <field name="report_name">fds2</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/account_invoice/FDS_Order.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_fds_oder_id">
            <field name="name">fds2</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">sale.order</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.fds_order_id'))"/>
        </record>
        <!--FDS 3 -->
        <record model="ir.actions.report.xml" id="fds_wbank_account_id">
            <field name="name">FDS TIERS PAYANT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">fds3</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/account_invoice/FDS_W_Bank.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_fds_wbank_account_id">
            <field name="name">fds3</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">account.invoice</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.fds_wbank_account_id'))"/>
        </record>
        <!-- FDS 4 -->
        <record model="ir.actions.report.xml" id="fds_wbank_order_id">
            <field name="name">FDS TIERS PAYANT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">sale.order</field>
            <field name="report_name">fds4</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/account_invoice/FDS_W_Bank_Order.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
        </record>
        <!-- button -->
        <record model="ir.values" id="value_fds_wbank_order_id">
            <field name="name">fds4</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">sale.order</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.fds_wbank_order_id'))"/>
        </record>
        
        
        <!-- BDX REMISE CHEQUE -->
        <record model="ir.actions.report.xml" id="bdx_check_id">
            <field name="name">BDX Remise Chq</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.voucher</field>
            <field name="report_name">bdxcheck</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/account_voucher/BDX-REMISE.odt</field>
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')"></field>
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>
        
        <!-- button  deleted for new deposit wizard
        
        <record model="ir.values" id="value_bdx_check__id">
            <field name="name">bdxcheck</field>
            <field name="key">action</field>
            <field name="key2">client_print_multi</field>
            <field name="model">account.voucher</field>
            <field name="object">TRUE</field>
            <field name="value" eval="'ir.actions.report.xml,' + str(ref('oph.bdx_check_id'))"/>
        </record>
        
        -->

        <!-- LES MODELES ETAT FACTORY -->
        <!-- ATTENTION a bien définir les parser -->
        <!--  1- modele etat factory LM -->
        <record model="ir.actions.report.xml" id="report_lm_id">
            <field name="name">Etat LM</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.lm</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_LM.odt</field>
            <!-- <field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>

        <!--  2- modele etat factory SMIT -->
        <record model="ir.actions.report.xml" id="report_smit_id">
            <field name="name">Etat SMIT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.smit</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_SMIT.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>

        <!--  3- modele etat factory AT -->
        <record model="ir.actions.report.xml" id="report_at_id">
            <field name="name">Etat AT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.at</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_AT.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>

        <!--  4- modele etat factory ILES -->
        <record model="ir.actions.report.xml" id="report_iles_id">
            <field name="name">Etat ILES</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.iles</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_ILES.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>

        <!--  5- modele etat factory NORD -->
        <record model="ir.actions.report.xml" id="report_nord_id">
            <field name="name">Etat NORD</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.nord</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_NORD.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>

        <!--  6- modele etat factory SUD -->
        <record model="ir.actions.report.xml" id="report_sud_id">
            <field name="name">Etat SUD</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">account.invoice</field>
            <field name="report_name">account.invoice.sud</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/Report_Etat_SUD.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
            <!-- choix du format d'edition/impression -->
            <field name="styles_mode">specified</field>
            <field name="stylesheet_id" ref="stt_etat_id"/>
        </record>
        <!-- FIN DES MODELES ETAT FACTORY -->
        
        <!--  ORDO IVT -->
        <record model="ir.actions.report.xml" id="ordo_ivt_id">
            <field name="name">Ordonnance IVT</field>
            <field name="type">ir.actions.report.xml</field>
            <field name="model">oph.bloc.agenda.line</field>
            <field name="report_name">oph.ivt.prescription</field>
            <field name="report_type">aeroo</field>
            <field name="auto">TRUE</field>
            <field name="report_rml">oph/report/odt/oph_bloc_agenda/Ordo_IVT.odt</field>
            <!--<field name="parser_state">default</field>-->
            <!-- parser state = default, loc, def-->
            <field name="parser_state">loc</field>
            <field name="parser_loc">oph/report/parser.py</field>
            <field name="tml_source">file</field>
            <!--  choix database, file, parser de template source-->
            <field name="in_format">oo-odt</field>
            <!-- choix de template Mime-type dans configuration-Technical-aero-report-Reports-->
            <field name="out_format" eval="ref('report_aeroo.report_mimetypes_odt_odt')">
            </field>
        </record>
    </data>
</openerp>